{"version":3,"file":"kernel.js","sources":["../src/kernel/fs/ofs/inode.js","../src/kernel/fs/pathname.js","../src/kernel/fs/ofs/main.js","../src/kernel/fs/domfs/main.js","../src/kernel/fs/vfs/main.js","../src/kernel/fs/main.js","../src/kernel/proc/filedesc.js","../src/misc/utils.js","../src/misc/flags.js","../src/kernel/proc/process.js","../src/kernel/proc/main.js","../src/kernel/proc/syscalls.js","../src/kernel/main.js"],"sourcesContent":["export default class OFS_Inode {\n  constructor(config = {}) {\n    this.links = 0;\n    this.perms = [true,true,false];\n    Object.assign(this, config);\n  }\n}","/*\r\n * Path name manipulations\r\n * p = new Pathname(\"/some///./../some/strange/././path\")\r\n * p.clean() => \"/some/strange/path\"\r\n */\r\nexport default class Pathname {\r\n  constructor(input) {\r\n    this.input = input;\r\n  }\r\n\r\n  // clean up a crazy path\r\n  // e.g. \"/some///./../some/strange/././path\" => \"/some/strange/path\"\r\n  get clean() {\r\n    let clean = [];\r\n    // Split the path by \"/\", match() because it doesn't add empty strings\r\n    const pathArray = this.input.match( /[^/]+/g );\r\n    // Iterate each name in the path\r\n    for (let i in pathArray) {\r\n      const name = pathArray[i];\r\n      // If it's the current directory, don't do anything\r\n      if (name === \".\") {}\r\n      // If it's the previous directory, remove the last added entry\r\n      else if (name === \"..\") { clean.pop() }\r\n      // Anything else, we add to the array plainly\r\n      else { clean.push(name) }\r\n    }\r\n    // Array to path\r\n    return \"/\" + clean.join(\"/\");\r\n  }\r\n\r\n  // Chop a path into an array of names\r\n  // \"/paths/are/like/arrays\" => [\"paths\", \"are\", \"like\", \"arrays\"]\r\n  get chop() {\r\n    const segments = this.clean.match( /[^/]+/g );\r\n    if (segments === null) {\r\n      return [\"/\"];\r\n    }\r\n    else {\r\n      return segments;\r\n    }\r\n  }\r\n\r\n  // Just the name of the file/directory the path leads to\r\n  get name() {\r\n    return this.chop[ this.chop.length - 1 ];\r\n  }\r\n\r\n  // Basename from the normal name\r\n  // \"filename.txt\" => \"filename\"\r\n  get basename() {\r\n    const name = this.name;\r\n    if ( name === \"\" ) {\r\n      return name;\r\n    }\r\n    else {\r\n      const base = name.match( /^[^\\.]+/ );\r\n      if (base !== null) {\r\n        return base[0];\r\n      }\r\n      else {\r\n        return \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  // Parent name, get the directory holding this\r\n  // \"/directories/hold/files/like-this-one\" => \"/directories/hold/files\"\r\n  get parent() {\r\n    if ( this.name === \"/\" ) {\r\n      return null;\r\n    }\r\n    else {\r\n      // Get the length of the path without the name in it\r\n      const parentLen = this.clean.length - this.name.length;\r\n      // Slice the name out of the path\r\n      return this.clean.slice( 0, parentLen );\r\n    }\r\n  }\r\n\r\n  // Extentions array from the name\r\n  // \"archive.tar.gz\" => [\".tar\", \".gz\"]\r\n  get extentions() {\r\n    return this.name.match( /\\.[^\\.]+/g );\r\n  }\r\n\r\n  // get the segments of a path like this : [\"/\", \"/path\", \"/path/example\"]\r\n  get segment() {\r\n    const pathArray = this.chop;\r\n    let segments = [];\r\n    // If its a root path, skip segments\r\n    if ( this.name === \"/\" ) {\r\n      segments = [\"/\"];\r\n    }\r\n    // Else, any other path\r\n    else {\r\n      for (let i = 0; i <= pathArray.length; i++) {\r\n        let matchPath = pathArray.slice(0, i);\r\n        segments.push( \"/\" + matchPath.join(\"/\") );\r\n      }\r\n    }\r\n    return segments;\r\n  }\r\n}","import Pathname from \"../pathname.js\";\nimport OFS_Inode from \"./inode.js\";\n\nexport default class OFS {\n  constructor() {\n    this.drive = arguments[0] || [\n      new OFS_Inode({\n        links: 1,\n        id: 0,\n        type: \"d\",\n        files: {\n          \".\": 0,\n          \"..\": 0\n        }\n      })\n    ];\n  }\n\n  // Resolve path to an inode, don't follow symbolic links\n  resolveHard(path) {\n    let inode = 0;\n    const trace = [inode];\n    if (path === \"\") {\n      return this.drive[inode];\n    }\n    const pathArray = new Pathname(path).chop;\n    for (let i = 0; i < pathArray.length; i++) {\n      const name = pathArray[i];\n      const inodeObj = this.drive[inode];\n      if (inodeObj.files === undefined) {\n        // Could not resolve path to inodes completely\n        return -1;\n      }\n      inode = inodeObj.files[name];\n      if (inode === undefined) {\n        // Could not find end inode, failed at segment name\n        return -1;\n      }\n      trace.push(inode);\n    }\n    return this.drive[ trace.pop() ];\n  }\n\n  // Resolve and return the inode, follow symbolic links\n  resolve(path, redirectCount=0) {\n    // Don't follow if we get to 50 symbolic link redirects\n    if (redirectCount >= 50) {\n      // Max symbolic link redirect count reached (50)\n      return -1;\n    }\n    const inode = this.resolveHard(path);\n    if (inode < 0) {\n      // Error on hard resolve\n      return -1;\n    }\n    if (inode.type === \"sl\") {\n      redirectCount++;\n      return this.resolve(inode.redirect, redirectCount);\n    }\n    return inode;\n  }\n\n  // Add a new inode to the disk\n  // Defaults to just adding an inode, but if you pass a parent directory inode in,\n  // it will add `name` as an entry in `parentInode`\n  addInode(type, name=null, parentInode=null) {\n    // Reject if name contains a \"/\"\n    if ( name.match(\"/\") ) {\n      return -1;\n    }\n    const id = this.drive.length;\n    this.drive[id] = new OFS_Inode({\n      links: 1,\n      type: type,\n      id: id\n    });\n    // Check parent if inode and directory\n    if (parentInode instanceof OFS_Inode && parentInode.type === \"d\") {\n      parentInode.files[name] = id;\n    }\n    return this.drive[id];\n  }\n\n  // Add a new file to the disk\n  mkFile(path) {\n    const pathname = new Pathname(path);\n    const parentInode = this.resolve(pathname.parent);\n    const name = pathname.name;\n    const inode = this.addInode(\"f\", name, parentInode);\n    if (inode < 0) {\n      return -1;\n    }\n    inode.data = \"\";\n    return inode;\n  }\n\n  // Add a new directory Inode to the disk\n  mkDir(path) {\n    const pathname = new Pathname(path);\n    const parentInode = this.resolve(pathname.parent);\n    const name = pathname.name;\n    const inode = this.addInode(\"d\", name, parentInode);\n    if (inode < 0) {\n      return -1;\n    }\n    inode.files = {\n      \".\": inode.id,\n      \"..\": parentInode.id\n    }\n    return inode;\n  }\n\n  // Make a hard link for an inode\n  mkLink(inode, path) {\n    const pathname = new Pathname(path);\n    const parentInode = this.resolve(pathname.parent);\n    const name = pathname.name;\n    // Same as in addInode, not very DRY I know...\n    if ( name.match(\"/\") ) {\n      return -1;\n    }\n    parentInode.files[name] = inode.id;\n    return inode;\n  }\n\n  // Make a symbolic link inode\n  mkSymLink(refPath, linkPath) {\n    const pathname = new Pathname(linkPath);\n    const parentInode = this.resolve(pathname.parent);\n    const name = pathname.name;\n    const inode = this.addInode(\"sl\", name, parentInode);\n    if (inode < 0) {\n      return -1;\n    }\n    const path = new Pathname(refPath).clean;\n    inode.redirect = path;\n    return inode;\n  }\n\n  // Remove by unlinking\n  rm(path) {\n    const pathname = new Pathname(path);\n    const parentInode = this.resolve(pathname.parent);\n    const name = pathname.name;\n    if ( parentInode < 0 ) {\n      return -1;\n    }\n    return delete parentInode.files[name];\n  }\n}","import Pathname from \"../pathname.js\";\n\nexport default class DOMFS {\n  constructor(selectorBase=\"\") {\n    this.base = selectorBase;\n    this.resolveHard = this.resolve;\n  }\n\n  resolve(path) {\n    const pathname = new Pathname(path);\n    // If we are at the DOM root, i.e. /dev/dom/\n    if (pathname.chop[0] === \"/\") {\n      return document.querySelector(\"*\");\n    }\n    else {\n      let selector = \" \" + pathname.chop.join(\" > \");\n      // For child selection by index\n      // element.children[0] becomes /dev/dom/element/1\n      selector = selector.replace( / (\\d)/g, \" :nth-child($1)\"  );\n      return document.querySelector(selector);\n    }\n  }\n}","import Pathname from \"../pathname.js\";\nimport OFS_Inode from \"../ofs/inode.js\";\nimport OFS from \"../ofs/main.js\";\nimport DOMFS from \"../domfs/main.js\";\n\nexport default class VFS {\n  constructor() {\n    this.mounts = {\n      \"/\": arguments[0] || new OFS()\n    };\n  }\n\n  // Mount a filesystem\n  mount(fs, mountPoint) {\n    this.mounts[mountPoint] = fs;\n    return mountPoint;\n  }\n\n  // Unmount a filesystem by mount point\n  unmount(mountPoint) {\n    return delete this.mounts[mountPoint];\n  }\n\n  // Resolve the path to the mounted filesystem\n  // This is the first step to trace a path, before any data containers (inodes etc) are involved\n  mountPoint(path) {\n    const pathname = new Pathname(path);\n    const segments = pathname.segment;\n    // All the mount points\n    const mounts = Object.keys(this.mounts);\n    // Array of resolved mounted disks\n    const resolves = [];\n    for (let i = 0; i < mounts.length; i++) {\n      let mount = new Pathname(mounts[i]).clean;\n      for (let i in segments) {\n        if (segments[i] === mount) {\n          resolves.push(mount);\n        }\n      }\n    }\n    const mountPoint = resolves.pop();\n    return mountPoint;\n  }\n\n  // Resolve a path to the fs provided data container\n  // resolveHard decides if following symbolic links and the like\n  // should or should not happen, default is to follow\n  resolve(path, resolveHard=false) {\n    const pathname = new Pathname(path);\n    const mountPoint = this.mountPoint(pathname.clean);\n    const fs = this.mounts[mountPoint];\n    const fsLocalPath = pathname.clean.substring( mountPoint.length );\n    if (resolveHard) {\n      return fs.resolveHard(fsLocalPath);\n    }\n    else {\n      return fs.resolve(fsLocalPath);\n    }\n  }\n\n  // Return data type of a file, could be \"inode\" for example\n  type(path) {\n    const container = this.resolve(path);\n    if (container instanceof OFS_Inode) {\n      return \"inode\";\n    }\n    else if (container instanceof HTMLElement) {\n      return \"element\"\n    }\n    else {\n      return \"unknown\";\n    }\n  }\n\n  // Get permissions\n  perms(path, type=this.type(path)) {\n    if (type === \"inode\") {\n      return this.resolve(path).perms;\n    }\n    // Read and write only for HTML elements\n    else if (type === \"element\") {\n      return [true, true, false];\n    }\n    // RW for anything unset\n    else {\n      return [true, true, false];\n    }\n  }\n\n  // Remove a path\n  rm(path) {\n    const pathname = new Pathname(path);\n    const mountPoint = this.mountPoint(pathname.clean);\n    const fs = this.mounts[mountPoint];\n    return fs.rm(pathname.clean);\n  }\n\n  // Make a path, and add it as a file or directory\n  // We won't check if the path already exists, we don't care\n  // For hard or symbolic links, target should be the path to redirect to\n  mkPath(type, path, target=null) {\n    const pathname = new Pathname(path);\n    const mountPoint = this.mountPoint(pathname.clean);\n    const fs = this.mounts[mountPoint];\n    // Assume failure until success\n    let addedObj = -1;\n    if (type === \"f\") {\n      addedObj = fs.mkFile(pathname.clean);\n    }\n    else if (type === \"d\") {\n      addedObj = fs.mkDir(pathname.clean);\n    }\n    else if (type === \"l\" && target !== null) {\n      const targetObj = this.resolve(target);\n      if ( targetObj < 0 ) {\n        // Target data container to hard link not resolved\n        return -1;\n      }\n      addedObj = fs.mkLink(targetObj, pathname.clean);\n    }\n    else if (type === \"sl\" && target !== null) {\n      addedObj = fs.mkSymLink(target, pathname.clean);\n    }\n    else {\n      // Unknown type\n      return -1;\n    }\n    return addedObj;\n  }\n\n  // mkPath() wrappers\n\n  // Create a file\n  touch(path) {\n   return this.mkPath(\"f\", path);\n  }\n\n  // Create a directory\n  mkdir(path) {\n   return this.mkPath(\"d\", path);\n  }\n\n  // Hard link\n  ln(refPath, linkPath) {\n    return this.mkPath(\"l\", linkPath, refPath);\n  }\n\n  // Sybolic link\n  lns(refPath, linkPath) {\n    return this.mkPath(\"sl\", linkPath, refPath);\n  }\n}","import OFS_Inode from \"./ofs/inode.js\";\nimport OFS from \"./ofs/main.js\";\nimport DOMFS from \"./domfs/main.js\";\nimport VFS from \"./vfs/main.js\";\n\nconst fs = new VFS(\n  new OFS([\n\n    new OFS_Inode({\n      links: 1,\n      id: 0,\n      type: \"d\",\n      files: {\n        \".\": 0,\n        \"..\": 0,\n        \"bin\": 1,\n        \"dev\": 2,\n        \"etc\": 3,\n        \"home\": 4,\n        \"lib\": 5,\n        \"log\": 6,\n        \"mnt\": 7,\n        \"tmp\": 8,\n        \"usr\": 9\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 1,\n      files: {\n        \".\": 1,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 2,\n      files: {\n        \".\": 2,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 3,\n      files: {\n        \".\": 3,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 4,\n      files: {\n        \".\": 4,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 5,\n      files: {\n        \".\": 5,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 6,\n      files: {\n        \".\": 6,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 7,\n      files: {\n        \".\": 7,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 8,\n      files: {\n        \".\": 8,\n        \"..\": 0\n      }\n    }),\n\n    new OFS_Inode({\n      links: 1,\n      type: \"d\",\n      id: 9,\n      files: {\n        \".\": 9,\n        \"..\": 0\n      }\n    })\n\n  ])\n);\n\n// Mount /lib\nfs.mount( new OFS([\n  new OFS_Inode({\n    links: 1,\n    id: 0,\n    type: \"d\",\n    files: {\n      \".\": 0,\n      \"..\": 0,\n      \"lib.js\": 1\n    }\n  }),\n\n  new OFS_Inode({\n    links: 1,\n    type: \"f\",\n    perms: [true, true, true],\n    id: 1,\n/* lib.js */data: \"\"/* end */\n  })\n]), \"/lib\" );\n\n// Mount /bin\nfs.mount( new OFS([\n  new OFS_Inode({\n    links: 1,\n    id: 0,\n    type: \"d\",\n    files: {\n      \".\": 0,\n      \"..\": 0,\n      \"fsh\": 1\n    }\n  }),\n\n  new OFS_Inode({\n    links: 1,\n    type: \"f\",\n    perms: [true, false, true],\n    id: 1,\n/* fsh */data: \"\"/* end */\n  })\n]), \"/bin\" );\n\nfs.mount( new DOMFS(), \"/dev/dom\" );\n\nexport default fs;","import fs from \"../fs/main.js\";\nimport Pathname from \"../fs/pathname.js\";\n\nexport default class FileDescriptor {\n  constructor(path) {\n    this.path = new Pathname(path).clean;\n    this.type = fs.type(this.path);\n    this.container = fs.resolve(this.path);\n    if (this.container < 0) {\n      throw new Error(\"Path Unresolved\");\n    }\n    this.perms = fs.perms(this.path);\n    // No permissions\n    if (this.perms === [false, false, false]) {\n      throw new Error(\"All permissions set to false\");\n    }\n  }\n\n  // Return read data\n  read() {\n    // Check read permission\n    if (! this.perms[0]) {\n      return -1;\n    }\n    if (this.type === \"inode\") {\n      const data = this.container.data;\n      // Directory or other\n      if (data === undefined) {\n        return -1;\n      }\n      return data;\n    }\n    else if (this.type === \"element\") {\n      return this.container.innerHTML;\n    }\n    else {\n      return -1;\n    }\n  }\n\n  // Write data out\n  write(data) {\n    // Check write permission\n    if (! this.perms[1]) {\n      return -1;\n    }\n    if (this.type === \"inode\") {\n      this.container.data = data;\n      return data;\n    }\n    else if (this.type === \"element\") {\n      this.container.innerHTML = data;\n      return data;\n    }\n    else {\n      return -1;\n    }\n  }\n\n  // View \"directory\" contents or return null\n  dir() {\n    // Check read permission\n    if (! this.perms[0]) {\n      return -1;\n    }\n    if (this.type === \"inode\") {\n      if ( this.container.type === \"f\" ) {\n        return Object.keys( this.container.files );\n      }\n      else {\n        return null;\n      }\n    }\n    else if (this.type === \"element\") {\n      if ( this.container.hasChildNodes() ) {\n        const children = this.container.children;\n        const elements = [];\n        for (let i = 0; i < children.length; i++) {\n          let el = children[i].localName;\n          let id = children[i].id;\n          let classes = children[i].className.split(\" \").join(\".\");\n          elements.push( el + id + classes );\n          // Child by index\n          elements.push(i + 1);\n        }\n        return elements;\n      }\n      else {\n        return null;\n      }\n    }\n    else {\n      return -1;\n    }\n  }\n}","const utils = {};\n\nutils.genUUID = function() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(char) {\n    let r = Math.random() * 16|0, v = char === \"x\" ? r : (r&0x3|0x8);\n    return v.toString(16);\n  });\n}\n\nutils.mkWorker = function(scriptStr) {\n  const blob = new Blob(\n    [scriptStr],\n    {type: \"application/javascript\"}\n  );\n  const uri = URL.createObjectURL(blob);\n  return new Worker(uri);\n}\n\nutils.openLocalFile = function(readAs=\"readAsText\") {\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  input.click();\n  return new Promise(function(resolve, reject) {\n    input.onchange = function() {\n      const file = input.files[0];\n      const reader = new FileReader();\n      reader[readAs](file);\n      reader.onloadend = function() {\n        resolve( reader.result );\n      };\n    };\n  });\n}\n\nutils.http = function(uri, method = \"GET\") {\n  return new Promise((resolve, reject) => {\n    if (! uri instanceof String) {\n      reject(\"URI invalid\");\n    }\n    const xhr = new XMLHttpRequest();\n    xhr.open(method, uri, true);\n    xhr.onload = function() {\n      if (xhr.status < 300 && xhr.status >= 200) {\n        resolve(xhr.response);\n      }\n      else {\n        reject(xhr.status + \" \" + xhr.statusText);\n      }\n    };\n    xhr.onerror = function(err) {\n      reject(err);\n    }\n    xhr.send();\n  });\n}\n\nexport default utils;","const flags = {};\n\n// Example output: [\"Browser\", \"xx.xx.xx\"]\nfunction browserInfo() {\n  const ua = navigator.userAgent;\n  const matches = ua.match( /(vivaldi|opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*([\\d.]+)/i ) || [];\n  if ( (/trident/i).test(matches[1]) ) {\n    const tem = ua.match( /\\brv[ :]+([\\d.]+)/g ) || \"\";\n    return [ \"IE\", tem[1] ];\n  }\n  if ( matches[1] === \"Chrome\" ) {\n    const tem = ua.match( /\\b(OPR|Edge)\\/([\\d.]+)/ );\n    if (tem) {\n      return [ \"Opera\", tem[1] ];\n    }\n  }\n  if ( matches[2] ) {\n    return [ matches[1], matches[2] ];\n  }\n  else {\n    return [navigator.appName, navigator.appVersion];\n  }\n}\n\nconst info = browserInfo();\n\nflags.browser = info[0];\nflags.version = info[1];\n\nexport default flags;","import FileDescriptor from \"./filedesc.js\";\nimport sys from \"./syscalls.js\";\nimport utils from \"../../misc/utils.js\";\nimport flags from \"../../misc/flags.js\";\n\nexport default class Process {\n  constructor(image, argv) {\n    this.argv = [] || argv;\n    this.argc = this.argv.length;\n    this.fds = [];\n    this.libs = [];\n    this.cwd = \"/\";\n    this.env = {\n      \"SHELL\": \"fsh\",\n      \"PATH\": \"/sbin:/bin\",\n      \"HOME\": \"/home\"\n    };\n    this.image = image;\n    // The worker is where the process is actually executed\n    // We auto-load the /lib/lib.js dynamic library\n    const libjs = this.load(\"/lib/lib.js\");\n    this.worker = utils.mkWorker(libjs + image);\n    // This event listener intercepts worker messages and then\n    // passes to the message handler, which decides what next\n    this.worker.addEventListener( \"message\", msg => { this.messageHandler(msg) });\n  }\n\n  // Handle messages coming from the worker\n  messageHandler(msg) {\n    const obj = msg.data;\n    // This does some quick message format validation, but,\n    // all value validation must be handled by the system call function itself\n    if (obj.type === \"syscall\" && obj.name in sys) {\n      // Execute a system call with given arguments\n      // Argument validation is not handled here\n      // But, we do validate the message format\n      if (obj.id !== undefined && obj.args instanceof Array) {\n        sys[obj.name](this, obj.id, obj.args);\n      }\n    }\n    // The message is not valid because of the type or name\n    else {\n      const error = {\n        status: \"error\",\n        reason: \"Invalid request type and/or name\",\n        id: obj.id\n      };\n      this.worker.postMessage(error);\n    }\n  }\n\n  // Check if we can access/it exists\n  access(path) {\n    const fd = new FileDescriptor(path);\n    if (fd.container) {\n      return true;\n    }\n    else {\n      return false\n    }\n  }\n\n  // Where open() actually runs\n  // Return a file descriptor\n  open(path) {\n    if (! this.access(path)) {\n      return -1;\n    }\n    const fd = new FileDescriptor(path);\n    this.fds.push(fd);\n    return this.fds.length - 1;\n  }\n\n  // Like opening a file, execept we add it to the library list\n  load(path) {\n    const fd = new FileDescriptor(path);\n    this.libs.push(fd);\n    return fd.read();\n  }\n}","import Process from \"./process.js\";\n\nclass ProcessTable {\n  constructor(init) {\n    if (init === undefined) {\n      throw new Error(\"Init process must be defined\");\n    }\n    this.list = [ null, init ];\n    this.nextPID = 2;\n  }\n\n  add(process) {\n    this.nextPID = this.list.push(process);\n    return this.nextPID - 1;\n  }\n}\n\nexport default new ProcessTable( new Process() );","import proc from \"./main.js\";\nimport Process from \"./process.js\";\n\nconst sys = {};\n\n// Raise an error\nsys.fail = function(process, msgID, args) {\n  const error = {\n    status: \"error\",\n    reason: args[0],\n    id: msgID\n  };\n  process.worker.postMessage(error);\n}\n\n// Throw a success result\nsys.pass = function(process, msgID, args) {\n  const result = {\n    status: \"success\",\n    result: args[0],\n    id: msgID\n  };\n  process.worker.postMessage(result);\n}\n\n// Send a dynamic library straight to the process\nsys.load = function(process, msgID, args) {\n  const data = process.load( args[0] );\n  sys.pass(process, msgID, [data]);\n}\n\n// Spawn a new process from an executable image\nsys.spawn = function(process, msgID, args) {\n  if (! args[1] instanceof Array) {\n    sys.fail(process, msgID, [\"Second argument should be the array argv\"]);\n    return -1;\n  }\n  const newProcess = new Process(args[0], args[1]);\n  const pid = proc.add( newProcess );\n  sys.pass(process, msgID, [pid]);\n}\n\n// Check file access\nsys.access = function(process, msgID, args) {\n  if (typeof args[0] !== \"string\") {\n    sys.fail(process, msgID, [\"Argument should be a string\"]);\n    return -1;\n  }\n  let path = \"\";\n  // If the first character is a \"/\", then working dir does not matter\n  if (args[0][0] === \"/\") {\n    path = args[0];\n  }\n  else {\n    path = process.cwd + \"/\" + args[0];\n  }\n  const result = process.access(path);\n  sys.pass(process, msgID, [result]);\n}\n\n// Resolve a path into a file descriptor, and add it to the table\nsys.open = function(process, msgID, args) {\n  if (typeof args[0] !== \"string\") {\n    sys.fail(process, msgID, [\"Argument should be a string\"]);\n    return -1;\n  }\n  let path = \"\";\n  // If the first character is a \"/\", then working dir does not matter\n  if (args[0][0] === \"/\") {\n    path = args[0];\n  }\n  else {\n    path = process.cwd + \"/\" + args[0];\n  }\n  const result = process.open(path);\n  sys.pass(process, msgID, [result]);\n}\n\n// Read data from a file descriptor\nsys.read = function(process, msgID, args) {\n  if (args.length !== 1) {\n    sys.fail(process, msgID, [\"Should have only 1 argument\"]);\n    return -1;\n  }\n  if (args[0] < 0) {\n    sys.fail(process, msgID, [\"File Descriptor should be postive\"]);\n    return -1;\n  }\n  const result = process.fds[ args[0] ].read();\n  sys.pass(process, msgID, [result]);\n}\n\n// Write data to a file descriptor\nsys.write = function(process, msgID, args) {\n  if (args.length !== 2) {\n    sys.fail(process, msgID, [\"Should have 2 arguments\"]);\n    return -1;\n  }\n  if (args[0] < 0) {\n    sys.fail(process, msgID, [\"File Descriptor should be postive\"]);\n    return -1;\n  }\n  const result = process.fds[ args[0] ].write( args[1] );\n  sys.pass(process, msgID, [result]);\n}\n\n// Change the current working directory\nsys.chdir = function(process, msgID, args) {\n  if (! args[0] instanceof String) {\n    sys.fail(process, msgID, [\"Argument should be a string\"]);\n    return -1;\n  }\n  process.cwd = args[0];\n  sys.pass(process, msgID, [ process.cwd ]);\n}\n\n// Get environment variable\nsys.getenv = function(process, msgID, args) {\n  if (! args[0] instanceof String) {\n    sys.fail(process, msgID, [\"Variable name should be a string\"]);\n    return -1;\n  }\n  const value = process.env[ args[0] ];\n  sys.pass(process, msgID, [ value ]);\n}\n\n// Set environment variable\nsys.setenv = function(process, msgID, args) {\n  if (! args[0] instanceof String) {\n    sys.fail(process, msgID, [\"Variable name should be a string\"]);\n    return -1;\n  }\n  if (! args[1] instanceof String) {\n    sys.fail(process, msgID, [\"Variable value should be a string\"]);\n    return -1;\n  }\n  const value = process.env[ args[0] ] = args[1];\n  sys.pass(process, msgID, [ value ]);\n}\n\nexport default sys;","import fs from \"./fs/main.js\";\nimport sys from \"./proc/syscalls.js\";\nimport flags from \"../misc/flags.js\";\nimport utils from \"../misc/utils.js\";\nimport proc from \"./proc/main.js\";\n\nexport default {\n  fs: fs,\n  sys: sys,\n  proc: proc,\n  name: \"faux\",\n  flags: flags,\n  utils: utils,\n  version: \"\"\n};"],"names":[],"mappings":"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"}