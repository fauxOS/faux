(function(global,factory){'object'==typeof exports&&'undefined'!=typeof module?module.exports=factory():'function'==typeof define&&define.amd?define(factory):global.faux=factory()})(this,function(){'use strict';function getMode(modeStr='r'){return{r:[!0,!1,!1,!1,!1],'r+':[!0,!0,!1,!1,!1],w:[!1,!0,!0,!0,!1],'w+':[!0,!0,!0,!0,!1],a:[!1,!0,!1,!0,!0],'a+':[!0,!0,!1,!0,!0]}[modeStr]}class OFS_Inode{constructor(config={}){this.links=0,this.exec=!1,Object.assign(this,config)}}class Pathname{constructor(input){this.input=input}get clean(){let clean=[];const pathArray=this.input.match(/[^/]+/g);for(let i in pathArray){const name=pathArray[i];'.'===name||('..'===name?clean.pop():clean.push(name))}return'/'+clean.join('/')}get chop(){const segments=this.clean.match(/[^/]+/g);return null===segments?['/']:segments}get name(){return this.chop[this.chop.length-1]}get basename(){const name=this.name;if(''===name)return name;const base=name.match(/^[^\.]+/);return null===base?'':base[0]}get parent(){if('/'===this.name)return null;const parentLen=this.clean.length-this.name.length;return this.clean.slice(0,parentLen)}get extentions(){return this.name.match(/\.[^\.]+/g)}get segment(){const pathArray=this.chop;let segments=[];if('/'===this.name)segments=['/'];else for(let matchPath,i=0;i<=pathArray.length;i++)matchPath=pathArray.slice(0,i),segments.push('/'+matchPath.join('/'));return segments}}class OFS{constructor(){this.drive=arguments[0]||[new OFS_Inode({links:1,id:0,type:'d',files:{'.':0,'..':0}})]}resolveHard(path){let inode=0;const trace=[inode];if('/'===path||''===path)return this.drive[inode];const pathArray=new Pathname(path).chop;for(let i=0;i<pathArray.length;i++){const name=pathArray[i],inodeObj=this.drive[inode];if(void 0===inodeObj.files)return-1;if(inode=inodeObj.files[name],void 0===inode)return-1;trace.push(inode)}return this.drive[trace.pop()]}resolve(path,redirectCount=0){if(50<=redirectCount)return-1;const inode=this.resolveHard(path);return 0>inode?-1:'sl'===inode.type?(redirectCount++,this.resolve(inode.redirect,redirectCount)):inode}addInode(type,name=null,parentInode=null){if(name.match('/'))return-1;const id=this.drive.length;return this.drive[id]=new OFS_Inode({links:1,type:type,id:id}),parentInode instanceof OFS_Inode&&'d'===parentInode.type&&(parentInode.files[name]=id),this.drive[id]}touch(path){const pathname=new Pathname(path),parentInode=this.resolve(pathname.parent),inode=this.addInode('f',pathname.name,parentInode);return 0>inode?-1:(inode.data='',inode)}mkDir(path){const pathname=new Pathname(path),parentInode=this.resolve(pathname.parent),name=pathname.name,inode=this.addInode('d',name,parentInode);return 0>inode?-1:(inode.files={'.':inode.id,'..':parentInode.id},inode)}mkLink(inode,path){const pathname=new Pathname(path),parentInode=this.resolve(pathname.parent),name=pathname.name;return name.match('/')?-1:(parentInode.files[name]=inode.id,inode)}mkSymLink(refPath,linkPath){const pathname=new Pathname(linkPath),parentInode=this.resolve(pathname.parent),name=pathname.name,inode=this.addInode('sl',name,parentInode);if(0>inode)return-1;const path=new Pathname(refPath).clean;return inode.redirect=path,inode}rm(path){const pathname=new Pathname(path),parentInode=this.resolve(pathname.parent),name=pathname.name;return 0>parentInode?-1:delete parentInode.files[name]}}class VNode{constructor(container){this.container=container,this.type=this.findType(),this.exec=this.isExecutable()}findType(){return this.container instanceof OFS_Inode?'inode':this.container instanceof HTMLElement?'element':'unknown'}isExecutable(){return!('inode'!==this.type)&&this.container.exec}get data(){if('inode'===this.type){const data=this.container.data;return void 0===data?-2:data}return'element'===this.type?this.container.innerHTML:-1}set data(data){return'inode'===this.type?(this.container.data=data,data):'element'===this.type?(this.container.innerHTML=data,data):-1}get files(){if('inode'===this.type)return'd'===this.container.type?Object.keys(this.container.files):null;if('element'===this.type){if(this.container.hasChildNodes()){const children=this.container.children,elements=[];for(let i=0;i<children.length;i++){let el=children[i].localName,id=children[i].id,classes=children[i].className.split(' ').join('.');elements.push(el+id+classes),elements.push(i+1)}return elements}return null}return-1}}const fs=new class{constructor(){this.mounts={'/':arguments[0]||new OFS}}mount(fs,mountPoint){return this.mounts[mountPoint]=fs,mountPoint}unmount(mountPoint){return delete this.mounts[mountPoint]}mountPoint(path){const pathname=new Pathname(path),segments=pathname.segment,mounts=Object.keys(this.mounts),resolves=[];for(let mount,i=0;i<mounts.length;i++)for(let i2 in mount=new Pathname(mounts[i]).clean,segments)segments[i2]===mount&&resolves.push(mount);return resolves.pop()}resolve(path){const pathname=new Pathname(path),cleanName=pathname.clean,mountPoint=this.mountPoint(cleanName),fs=this.mounts[mountPoint],fsLocalPath=cleanName.substring(mountPoint.length),container=fs.resolve(fsLocalPath);return 0>container?-1:new VNode(container)}touch(path){const pathname=new Pathname(path),mountPoint=this.mountPoint(path),fs=this.mounts[mountPoint],fsLocalPath=pathname.clean.substring(mountPoint.length),touched=fs.touch(fsLocalPath);return 0>touched?-1:touched}}(new OFS([new OFS_Inode({links:1,id:0,type:'d',files:{'.':0,'..':0,bin:1,dev:2,etc:3,home:4,lib:5,log:6,mnt:7,tmp:8,usr:9}}),new OFS_Inode({links:1,type:'d',id:1,files:{'.':1,'..':0}}),new OFS_Inode({links:1,type:'d',id:2,files:{'.':2,'..':0}}),new OFS_Inode({links:1,type:'d',id:3,files:{'.':3,'..':0}}),new OFS_Inode({links:1,type:'d',id:4,files:{'.':4,'..':0}}),new OFS_Inode({links:1,type:'d',id:5,files:{'.':5,'..':0}}),new OFS_Inode({links:1,type:'d',id:6,files:{'.':6,'..':0}}),new OFS_Inode({links:1,type:'d',id:7,files:{'.':7,'..':0}}),new OFS_Inode({links:1,type:'d',id:8,files:{'.':8,'..':0}}),new OFS_Inode({links:1,type:'d',id:9,files:{'.':9,'..':0}})]));fs.mount(new OFS([new OFS_Inode({links:1,id:0,type:'d',files:{'.':0,'..':0,lib:1}}),new OFS_Inode({links:1,type:'f',exec:!0,id:1,data:'class Pathname{constructor(input){this.input=input}get clean(){let clean=[];const pathArray=this.input.match(/[^/]+/g);for(let i in pathArray){const name=pathArray[i];"."===name||(".."===name?clean.pop():clean.push(name))}return"/"+clean.join("/")}get chop(){const segments=this.clean.match(/[^/]+/g);return null===segments?["/"]:segments}get name(){return this.chop[this.chop.length-1]}get basename(){const name=this.name;if(""===name)return name;const base=name.match(/^[^\\.]+/);return null===base?"":base[0]}get parent(){if("/"===this.name)return null;const parentLen=this.clean.length-this.name.length;return this.clean.slice(0,parentLen)}get extentions(){return this.name.match(/\\.[^\\.]+/g)}get segment(){const pathArray=this.chop;let segments=[];if("/"===this.name)segments=["/"];else for(let matchPath,i=0;i<=pathArray.length;i++)matchPath=pathArray.slice(0,i),segments.push("/"+matchPath.join("/"));return segments}}const fs={};fs.readFile=function(path="/"){return open(path,"r").then(fd=>{return read(fd)})},fs.writeFile=function(path="/",data=""){return open(path,"w").then(fd=>{return write(fd,data)})},self.Pathname=Pathname,self.fs=fs;'})]),'/lib'),fs.mount(new OFS([new OFS_Inode({links:1,id:0,type:'d',files:{'.':0,'..':0,fsh:1}}),new OFS_Inode({links:1,type:'f',exec:!0,id:1,data:'function tokenizeLine(line=""){const tokens=line.match(/(["\'])(?:\\\\|.)+\\1|((?:[^\\\\\\s]|\\\\.)*)/g).filter(String);for(let token,i=0;i<tokens.length;i++)token=tokens[i],tokens[i]=token.replace(/\\\\(?=.)/g,""),token.match(/^["\'].+(\\1)$/m)&&(tokens[i]=/^(["\'])(.+)(\\1)$/gm.exec(token)[2]);return tokens}function lex(input=""){const allTokens=[],lines=input.match(/(\\\\;|[^;])+/g);for(let tokens,i=0;i<lines.length;i++)tokens=tokenizeLine(lines[i]),allTokens.push(tokens);return allTokens}function parseCommand(tokens){const command={type:"simple",argv:tokens,argc:tokens.length,name:tokens[0]};return command}function parse(input=""){const AST={type:"script",commands:[]},commands=lex(input);for(let parsed,i=0;i<commands.length;i++)parsed=parseCommand(commands[i]),AST.commands[i]=parsed;return AST}parse("echo hello, world");'})]),'/bin'),fs.mount(new class{constructor(selectorBase=''){this.base=selectorBase}resolve(path){const pathname=new Pathname(path);if('/'===pathname.chop[0])return document.querySelector('*');let selector=' '+pathname.chop.join(' > ');return selector=selector.replace(/ (\d)/g,' :nth-child($1)'),document.querySelector(selector)}touch(path){const pathname=new Pathname(path),parent=this.resolve(pathname.parent);if(!parent)return-1;const el=document.createElement(pathname.name);return parent.appendChild(el)}},'/dev/dom');class FileDescriptor{constructor(path,mode){if(this.mode=getMode(mode),this.path=new Pathname(path).clean,this.vnode=fs.resolve(this.path),!this.vnode.container)if(!this.mode[3])throw new Error('Path Unresolved');else if(fs.touch(this.path),this.vnode=fs.resolve(this.path),0>this.vnode)throw new Error('Error on file creation or resolve');this.mode[2]&&this.truncate(),this.type=this.vnode.type}truncate(){this.vnode.data=''}read(){return this.mode[0]?this.vnode.data:-1}write(data){return this.vnode.data=data}readdir(){return this.vnode.files}}const utils={genUUID:function(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(char){let r=0|16*Math.random(),v='x'===char?r:8|3&r;return v.toString(16)})},mkWorker:function(scriptStr){const blob=new Blob([scriptStr],{type:'application/javascript'}),uri=URL.createObjectURL(blob);return new Worker(uri)},openLocalFile:function(readAs='readAsText'){const input=document.createElement('input');return input.type='file',input.click(),new Promise(function(resolve){input.onchange=function(){const file=input.files[0],reader=new FileReader;reader[readAs](file),reader.onloadend=function(){resolve(reader.result)}}})},http:function(uri,method='GET'){return new Promise((resolve,reject)=>{!uri instanceof String&&reject('URI invalid');const xhr=new XMLHttpRequest;xhr.open(method,uri,!0),xhr.onload=function(){300>xhr.status&&200<=xhr.status?resolve(xhr.response):reject(xhr.status+' '+xhr.statusText)},xhr.onerror=function(err){reject(err)},xhr.send()})}},flags={},info=function(){const ua=navigator.userAgent,matches=ua.match(/(vivaldi|opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*([\d.]+)/i)||[];if(/trident/i.test(matches[1])){const tem=ua.match(/\brv[ :]+([\d.]+)/g)||'';return['IE',tem[1]]}if('Chrome'===matches[1]){const tem=ua.match(/\b(OPR|Edge)\/([\d.]+)/);if(tem)return['Opera',tem[1]]}return matches[2]?[matches[1],matches[2]]:[navigator.appName,navigator.appVersion]}();flags.browser=info[0],flags.version=info[1];class Process{constructor(image){this.argv=[],this.argc=this.argv.length,this.fds=[],this.libs=[],this.cwd='/',this.env={SHELL:'fsh',PATH:'/sbin:/bin',HOME:'/home'},this.image=image;const lib=this.load('/lib/lib');this.worker=utils.mkWorker('function newID(length=8){const chars="0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";let id="";for(let i=0;i<length;i++){const randNum=Math.floor(Math.random()*chars.length);id+=chars.substring(randNum,randNum+1)}return id}function call(name,args){const id=newID();return postMessage({type:"syscall",name:name,args:args,id:id}),new Promise(function(resolve,reject){self.addEventListener("message",msg=>{msg.data.id===id&&("success"===msg.data.status?resolve(msg.data.result):reject(msg.data.reason))})})}async function load(path){const data=await call("load",[path]);if(-2===data)return new Error("No data returned, possibly a directory");return 0>data?new Error("Could not get data"):eval(data)}function spawn(image,argv=[]){return call("spawn",[image,argv])}function exec(path,argv){return call("exec",[path,argv])}function access(path){return call("access",[path])}async function open(path,mode="r"){const fd=await call("open",[path,mode]);return 0>fd?new Error("Could not open file"):fd}async function read(fd){const data=await call("read",[fd]);if(-2===data)return new Error("No data returned, possibly a directory");return 0>data?new Error("Could not get data"):data}async function write(fd,data){const ret=await call("write",[fd,data]);return 0>ret?new Error("Could not write data"):data}function pwd(){return call("pwd",[])}function chdir(path){return call("chdir",[path])}function getenv(varName){return call("getenv",[varName])}function setenv(varName){return call("setenv",[varName])}'+lib+'\n\n'+image),this.worker.addEventListener('message',msg=>{this.messageHandler(msg)})}messageHandler(message){const msg=message.data;if('syscall'===msg.type&&msg.name in sys)void 0!==msg.id&&msg.args instanceof Array&&sys[msg.name](this,msg.id,msg.args);else{const error={status:'error',reason:'Invalid request - Rejected by the message handler',id:msg.id};this.worker.postMessage(error)}}access(path,mode='r'){try{const fd=new FileDescriptor(path,mode);return!!fd.vnode}catch(err){return!1}}open(path,mode){if(!this.access(path,mode))return-1;const fd=new FileDescriptor(path,mode);return this.fds.push(fd),this.fds.length-1}load(path){const fd=new FileDescriptor(path);return this.libs.push(fd),fd.read()}}var proc=new class{constructor(init){if(init===void 0)throw new Error('Init process must be defined');this.list=[null,init],this.nextPID=2}add(process){return this.nextPID=this.list.push(process),this.nextPID-1}}(new Process());const sys={};sys.fail=function(process,msgID,args){const error={status:'error',reason:args[0],id:msgID};process.worker.postMessage(error)},sys.pass=function(process,msgID,args){const result={status:'success',result:args[0],id:msgID};process.worker.postMessage(result)},sys.load=function(process,msgID,args){const data=process.load(args[0]);sys.pass(process,msgID,[data])},sys.spawn=function(process,msgID,args){if(!args[1]instanceof Array)return sys.fail(process,msgID,['Second argument should be the array argv']),-1;const newProcess=new Process(args[0],args[1]),pid=proc.add(newProcess);sys.pass(process,msgID,[pid])},sys.access=function(process,msgID,args){if('string'!=typeof args[0])return sys.fail(process,msgID,['Argument should be a string']),-1;let path='';path='/'===args[0][0]?args[0]:process.cwd+'/'+args[0];const result=process.access(path);sys.pass(process,msgID,[result])},sys.open=function(process,msgID,args){if('string'!=typeof args[0]&&'string'!=typeof args[1])return sys.fail(process,msgID,['Arguments 1 and 2 should be a strings']),-1;let path='';path='/'===args[0][0]?args[0]:process.cwd+'/'+args[0];const result=process.open(path,args[1]);sys.pass(process,msgID,[result])},sys.read=function(process,msgID,args){if(1!==args.length)return sys.fail(process,msgID,['Should have only 1 argument']),-1;if(0>args[0])return sys.fail(process,msgID,['File Descriptor should be postive, check file name']),-1;const result=process.fds[args[0]].read();sys.pass(process,msgID,[result])},sys.write=function(process,msgID,args){if(2!==args.length)return sys.fail(process,msgID,['Should have 2 arguments']),-1;if(0>args[0])return sys.fail(process,msgID,['File Descriptor should be postive, check file name']),-1;const result=process.fds[args[0]].write(args[1]);sys.pass(process,msgID,[result])},sys.pwd=function(process,msgID){sys.pass(process,msgID,[process.cwd])},sys.chdir=function(process,msgID,args){return!args[0]instanceof String?(sys.fail(process,msgID,['Argument should be a string']),-1):void(process.cwd=args[0],sys.pass(process,msgID,[process.cwd]))},sys.getenv=function(process,msgID,args){if(!args[0]instanceof String)return sys.fail(process,msgID,['Variable name should be a string']),-1;const value=process.env[args[0]];sys.pass(process,msgID,[value])},sys.setenv=function(process,msgID,args){if(!args[0]instanceof String)return sys.fail(process,msgID,['Variable name should be a string']),-1;if(!args[1]instanceof String)return sys.fail(process,msgID,['Variable value should be a string']),-1;const value=process.env[args[0]]=args[1];sys.pass(process,msgID,[value])};return{fs:fs,sys:sys,proc:proc,name:'faux',flags:flags,utils:utils,version:'0.0.3'}});