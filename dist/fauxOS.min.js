(function(global,factory){'object'==typeof exports&&'undefined'!=typeof module?module.exports=factory():'function'==typeof define&&define.amd?define('faux',factory):global.faux=factory()})(this,function(){'use strict';function assertString(str){if('string'!=typeof str)throw new Error('Some argument is not a string')}function normalize(path){if(!path)return'.';assertString(path);const significant=[];let isAbsolute=!1;0===path.indexOf('/')&&(isAbsolute=!0);const pathArray=path.match(/[^/]+/g);for(let i in pathArray){const name=pathArray[i],lastItem=significant[significant.length-1];'.'===name||('..'===name?isAbsolute?significant.pop():0===significant.length||'..'===lastItem?significant.push('..'):significant.pop():significant.push(name))}return isAbsolute?'/'+significant.join('/'):significant.join('/')}function chop(path){const segments=normalize(path).match(/[^/]+/g);return segments?segments:[]}function getMode(mode='r'){return{r:{read:!0,write:!1,truncate:!1,create:!1,append:!1},"r+":{read:!0,write:!0,truncate:!1,create:!1,append:!1},w:{read:!1,write:!0,truncate:!0,create:!0,append:!1},"w+":{read:!0,write:!0,truncate:!0,create:!0,append:!1},a:{read:!1,write:!0,truncate:!1,create:!0,append:!0},"a+":{read:!0,write:!0,truncate:!1,create:!0,append:!0}}[mode]}function resolvePath(inputPath,process){return'/'===inputPath[0]?inputPath:process.cwd+'/'+inputPath}function fail(process,id,reason){process.worker.postMessage({status:'error',reason,id})}function pass(process,id,result){process.worker.postMessage({status:'success',result,id})}function mkWorker(scriptStr){const blob=new Blob([scriptStr],{type:'application/javascript'}),uri=URL.createObjectURL(blob);return new Worker(uri)}function isEchoable(key){switch(key){case'\x1B[A':case'\x1B[B':case'\x1B[C':case'\x1B[D':return!1;break;default:return!0;}}class Inode{constructor(config={}){this.links=1,this.file=!1,this.executable=!1,this.dir=!1,Object.assign(this,config)}read(){if(this.file)return this.contents;throw new Error('Not a file')}write(contents){if(this.file)return void(this.contents=contents);throw new Error('Not a file')}append(contents){if(this.file)return void(this.contents+=contents);throw new Error('Not a file')}truncate(){if(this.file)return void(this.contents='');throw new Error('Not a file')}readdir(){if(this.dir)return Object.keys(this.children);throw new Error('Not a directory')}}class OFS{constructor(inodes){this.inodes=inodes||[new Inode({dir:!0,children:{}})]}resolve(pathArray){const rootInode=this.inodes[0],inodeArray=[rootInode];for(let i in pathArray){const prevInode=inodeArray.slice(-1)[0];if(!prevInode.children)throw new Error('Path contains segement that isn\'t a directory');const name=pathArray[i],nextInode=prevInode.children[name];if(!nextInode)throw new Error('Path contains non-existent entry');inodeArray.push(nextInode)}return inodeArray.pop()}addInode(parentPathArray,name,inode){if(name.match('/'))throw new Error('Name can\'t contain forward slashes');const parent=this.resolve(parentPathArray);if(parent.dir)this.inodes.push(inode),parent.children[name]=inode;else throw new Error('Parent is not a directory')}create(pathArray){const parent=pathArray.slice(0,-1),name=pathArray.slice(-1)[0],inode=new Inode({file:!0,contents:''});return this.addInode(parent,name,inode),inode}mkdir(pathArray){const parent=pathArray.slice(0,-1),name=pathArray.slice(-1)[0],inode=new Inode({dir:!0,children:{}});return this.addInode(parent,name,inode),inode}link(oldPathArray,newPathArray){const oldInode=this.resolve(oldPathArray),newParent=this.resolve(newPathArray.slice(0,-1)),newName=newPathArray.slice(-1)[0];if(newName.match('/'))throw new Error('Name can\'t contain forward slashes');if(newParent.dir)newParent.children[newName]=oldInode,oldInode.links++;else throw new Error('New parent is not a directory')}unlink(pathArray){const parent=this.resolve(pathArray.slice(0,-1)),name=pathArray.slice(-1)[0];if(parent.dir)return void delete parent.children[name];throw new Error('Parent is not a directory')}}class Inode$1{constructor(config={}){this.links=1,this.file=!0,this.executable=!1,this.dir=!0,Object.assign(this,config)}get contents(){return this.raw.innerHTML}set contents(contents){return this.raw.innerHTML=contents}get children(){const dir=[],children=this.raw.children;for(let i=0;i<children.length;i++){const child=children[i],name=child.localName,id=child.id?'#'+child.id:'',classes=child.className?'.'+child.className.replace(/\s+/g,'.'):'';dir.push(name+id+classes),dir.push(i+1)}return dir}read(){return this.contents}write(contents){this.contents=contents}append(contents){this.contents+=contents}truncate(){this.contents=''}readdir(){return Object.keys(this.children)}}class FileDescriptor{constructor(path,mode){this.mode=getMode(mode),this.path=normalize(path);try{this.inode=fs.resolve(this.path)}catch(err){if(!this.mode.create)throw new Error('Does not exist');else if(fs.create(this.path),this.inode=fs.resolve(this.path),!this.inode)throw new Error('Error on file creation')}this.mode.truncate&&this.inode.truncate()}read(){if(this.mode.read)return this.inode.read();throw new Error('Read mode unset')}write(contents){if(this.mode.write)return this.mode.append?this.inode.append(contents):this.inode.write(contents);throw new Error('Write mode unset')}readdir(){return this.inode.readdir()}}var sys=Object.freeze({spawn:function(process,msgID,[image,argv]){if('string'!=typeof image)return fail(process,msgID,'First argument - image - should be a string');if(!argv instanceof Array)return fail(process,msgID,'Second argument - argv - should be an array');try{const newProcess=new Process(image,argv),pid=processTable.add(newProcess);return pass(process,msgID,pid)}catch(err){return fail(process,msgID,err)}},exec:function(process,msgID,[inputPath,argv]){if('string'!=typeof inputPath)return fail(process,msgID,'First argument - path - should be a string');if(!argv instanceof Array)return fail(process,msgID,'Second argument - argv - should be an array');try{const safePath=resolvePath(inputPath,process),image=fs.resolve(safePath).read(),newProcess=new Process(image,argv),pid=processTable.add(newProcess);return pass(process,msgID,pid)}catch(err){return fail(process,msgID,err)}},exists:function(process,msgID,[inputPath]){if('string'!=typeof inputPath)return fail(process,msgID,'First argument - path - should be a string');try{const safePath=resolvePath(inputPath,process),result=process.exists(safePath);return pass(process,msgID,result)}catch(err){return fail(process,msgID,err)}},stat:function(process,msgID,[inputPath]){if('string'!=typeof inputPath)return fail(process,msgID,'First argument - path - should be a string');try{const safePath=resolvePath(inputPath,process),inode=fs.resolve(safePath);return pass(process,msgID,{file:!!inode.file,dir:!!inode.dir,device:!!inode.device,executable:!!inode.executable,links:inode.links})}catch(err){return fail(process,msgID,err)}},open:function(process,msgID,[inputPath,mode]){if('string'!=typeof inputPath)return fail(process,msgID,'First argument - path - should be a string');if('string'!=typeof mode)return fail(process,msgID,'Second argument - mode - should be a string');try{const safePath=resolvePath(inputPath,process),fd=process.open(safePath,mode);return pass(process,msgID,fd)}catch(err){return fail(process,msgID,err)}},close:function(process,msgID,[fd]){if(0>fd)return fail(process,msgID,'File Descriptor should be >= 0');if(!process.fds[fd])return fail(process,msgID,'File Descriptor must exist');try{const result=process.close(fd);return pass(process,msgID,result)}catch(err){return fail(process,msgID,err)}},dup:function(process,msgID,[fd]){if(0>fd)return fail(process,msgID,'File Descriptor should be >= 0');if(!process.fds[fd])return fail(process,msgID,'File Descriptor must exist');try{const newFd=process.dup(fd);return pass(process,msgID,newFd)}catch(err){return fail(process,msgID,err)}},dup2:function(process,msgID,[fd1,fd2]){if(0>fd1)return fail(process,msgID,'File Descriptor 1 should be >= 0');if(!process.fds[fd1])return fail(process,msgID,'File Descriptor 1 must exist');if(0>fd2)return fail(process,msgID,'File Descriptor 2 should be >= 0');try{const newFd=process.dup2(fd1,fd2);return pass(process,msgID,newFd)}catch(err){return fail(process,msgID,err)}},read:function(process,msgID,[fd]){if(0>fd)return fail(process,msgID,'File Descriptor should be >= 0');try{const data=process.fds[fd].read();return pass(process,msgID,data)}catch(err){return fail(process,msgID,err)}},readdir:function(process,msgID,[fd]){if(0>fd)return fail(process,msgID,'File Descriptor should be >= 0');try{const children=process.fds[fd].readdir();return pass(process,msgID,children)}catch(err){return fail(process,msgID,err)}},write:function(process,msgID,[fd,data]){if(0>fd)return fail(process,msgID,'File Descriptor should be >= 0');if('string'!=typeof data)return fail(process,msgID,'Second argument - data - should be a string');try{const result=process.fds[fd].write(data);return pass(process,msgID,result)}catch(err){return fail(process,msgID,err)}},mkdir:function(process,msgID,[inputPath]){if('string'!=typeof inputPath)return fail(process,msgID,'First argument - path - should be a string');try{const safePath=resolvePath(inputPath,process),result=fs.mkdir(safePath);return pass(process,msgID,result)}catch(err){return fail(process,msgID,err)}},unlink:function(process,msgID,[inputPath]){if('string'!=typeof inputPath)return fail(process,msgID,'First argument - path - should be a string');try{const safePath=resolvePath(inputPath,process),result=fs.unlink(safePath);return pass(process,msgID,result)}catch(err){return fail(process,msgID,err)}},pwd:function(process,msgID){return pass(process,msgID,process.cwd)},chdir:function(process,msgID,[inputPath]){if('string'!=typeof inputPath)return fail(process,msgID,'First argument - path - should be a string');const safePath=resolvePath(inputPath,process),result=process.cwd=safePath;return pass(process,msgID,result)},getenv:function(process,msgID,[key]){if(key){if('string'!=typeof key)return fail(process,msgID,'First argument - key - should be a string (or a falsey value)');const value=process.env[key];return pass(process,msgID,value)}return pass(process,msgID,process.env)},setenv:function(process,msgID,[key,value]){if('string'!=typeof key)return fail(process,msgID,'First argument - key - should be a string');if('string'!=typeof value)return fail(process,msgID,'Second argument - value - should be a string');const result=process.env[key]=value;return pass(process,msgID,result)}}),utils=Object.freeze({genUUID:function(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(char){let r=0|16*Math.random(),v='x'===char?r:8|3&r;return v.toString(16)})},mkWorker:mkWorker,openLocalFile:function(readAs='readAsText'){const input=document.createElement('input');return input.type='file',input.click(),new Promise(function(resolve){input.onchange=function(){const file=input.files[0],reader=new FileReader;reader[readAs](file),reader.onloadend=function(){resolve(reader.result)}}})},http:function(uri,method='GET'){return new Promise((resolve,reject)=>{!uri instanceof String&&reject('URI invalid');const xhr=new XMLHttpRequest;xhr.open(method,uri,!0),xhr.onload=function(){300>xhr.status&&200<=xhr.status?resolve(xhr.response):reject(xhr.status+' '+xhr.statusText)},xhr.onerror=function(err){reject(err)},xhr.send()})}});class Process{constructor(image='',argv=[]){this.image=image,this.argv=argv,this.argc=this.argv.length,this.fds=[],this.cwd='/',this.env={SHELL:'fsh',PATH:'./:/bin',HOME:'/home',TERM:'xterm-256color'};const jsonArgv=JSON.stringify(this.argv),expose=`const argv = ${jsonArgv}; const argc = ${this.argc};`;this.worker=mkWorker([expose,'var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value)}).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};(function(){"use strict";function newID(length=10){const chars="0123456789abcdefghiklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXTZ".split("");let id="";for(let i=0;i<length;i++){const randomIndex=Math.floor(Math.random()*chars.length);id+=chars[randomIndex]}return id}function call(name="",args=[]){const id=newID();return postMessage({type:"syscall",name,args,id}),new Promise((resolve,reject)=>{function listener(message){const msg=message.data;msg.id===id&&("success"===msg.status?resolve(msg.result):reject(msg.reason),removeEventListener("message",listener))}addEventListener("message",listener)})}function stat(path){return __awaiter(this,void 0,void 0,function*(){return call("stat",[path])})}function assertString(str){if("string"!=typeof str)throw new Error("Some argument is not a string")}function normalize(path){if(!path)return".";assertString(path);const significant=[];let isAbsolute=!1;0===path.indexOf("/")&&(isAbsolute=!0);const pathArray=path.match(/[^/]+/g);for(let i in pathArray){const name=pathArray[i],lastItem=significant[significant.length-1];"."===name||(".."===name?isAbsolute?significant.pop():0===significant.length||".."===lastItem?significant.push(".."):significant.pop():significant.push(name))}return isAbsolute?"/"+significant.join("/"):significant.join("/")}function parse(path=""){assertString(path);const normalized=normalize(path),matches=normalized.match(splitPathRe);return{root:matches[1],dir:matches[2],base:matches[3],ext:matches[4],name:matches[3].slice(0,matches[3].length-matches[4].length)}}function readFile(path,mode="r"){return __awaiter(this,void 0,void 0,function*(){const fd=yield sys.open(path,mode),data=sys.read(fd);return sys.close(fd),data})}function writeFile(path,data="",mode="w"){return __awaiter(this,void 0,void 0,function*(){const fd=yield sys.open(path,mode);return sys.write(fd,data),void sys.close(fd)})}function loadFile(path){return __awaiter(this,void 0,void 0,function*(){const pathStat=yield stat(path);if(pathStat.file)return self.eval((yield readFile(path)));const pathJsStat=yield stat(path+".js");if(pathJsStat.file)return self.eval((yield readFile(path+".js")));const pathJsonStat=yield stat(path+".json");if(pathJsonStat.file)return JSON.parse((yield readFile(path+".json")));throw new Error("not found")})}function wrap(style,str){const[open,close]=ansi[style];return`\\x1b[${open}m${str}\\x1b[${close}m`}function colorize(styles,str){if(styles instanceof Array)for(let i in styles)str=wrap(styles[i],str);else"string"==typeof styles&&(str=wrap(styles,str));return str}var sys$1=Object.freeze({spawn:function(image="",argv=[]){return __awaiter(this,void 0,void 0,function*(){return call("spawn",[image,argv])})},exec:function(path,argv=[]){return __awaiter(this,void 0,void 0,function*(){return call("exec",[path,argv])})},exists:function(path){return __awaiter(this,void 0,void 0,function*(){return call("exists",[path])})},stat:stat,open:function(path,mode="r"){return __awaiter(this,void 0,void 0,function*(){return call("open",[path,mode])})},close:function(fd){return __awaiter(this,void 0,void 0,function*(){return call("close",[fd])})},dup:function(fd){return __awaiter(this,void 0,void 0,function*(){return call("dup",[fd])})},dup2:function(fd1,fd2){return __awaiter(this,void 0,void 0,function*(){return call("dup2",[fd1,fd2])})},read:function(fd){return __awaiter(this,void 0,void 0,function*(){return call("read",[fd])})},readdir:function(fd){return __awaiter(this,void 0,void 0,function*(){return call("readdir",[fd])})},write:function(fd,data=""){return __awaiter(this,void 0,void 0,function*(){return call("write",[fd,data])})},mkdir:function(path){return __awaiter(this,void 0,void 0,function*(){return call("mkdir",[path])})},unlink:function(path){return __awaiter(this,void 0,void 0,function*(){return call("unlink",[path])})},pwd:function(){return __awaiter(this,void 0,void 0,function*(){return call("pwd",[])})},chdir:function(path="/home"){return __awaiter(this,void 0,void 0,function*(){return call("chdir",[path])})},getenv:function(key){return __awaiter(this,void 0,void 0,function*(){return call("getenv",[key])})},setenv:function(key,value=""){return __awaiter(this,void 0,void 0,function*(){return call("setenv",[key,value])})}}),browser=function(){const ua=navigator.userAgent,matches=ua.match(/(vivaldi|opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*([\\d.]+)/i)||[];if(/trident/i.test(matches[1])){const tem=ua.match(/\\brv[ :]+([\\d.]+)/g)||"";return["IE",tem[1]]}if("Chrome"===matches[1]){const tem=ua.match(/\\b(OPR|Edge)\\/([\\d.]+)/);if(tem)return["Opera",tem[1]]}return matches[2]?{name:matches[1],version:matches[2]}:{name:navigator.appName,version:navigator.appVersion}}();const splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;var path=Object.freeze({normalize:normalize,parse:parse,dirname:function(path=""){const parsed=parse(path);return parsed.root?"/"+parsed.dir:parsed.dir},basename:function(path="",extension=""){const basename=parse(path).base,indexOf=basename.indexOf(extension);return indexOf&&indexOf+extension.length===basename.length?basename.slice(0,indexOf):basename},extname:function(path){return parse(path).ext},join:function(){const paths=[];for(let i in arguments)assertString(arguments[i]),paths.push(arguments[i]);const joined=paths.join("/");return normalize(joined)},chop:function(path){const segments=normalize(path).match(/[^/]+/g);return segments?segments:[]}}),fs=Object.freeze({readFile:readFile,writeFile:writeFile,appendFile:function(path,data="",mode="a"){return __awaiter(this,void 0,void 0,function*(){const fd=yield sys.open(path,mode);return sys.write(fd,data),void sys.close(fd)})}}),stdin=Object.freeze({write:function(){return __awaiter(this,void 0,void 0,function*(){return readFile("/dev/console")})}}),stdout=Object.freeze({write:function(str){return __awaiter(this,void 0,void 0,function*(){return writeFile("/dev/console",str,"r+")})}});var process$1={stdin,stdout,stderr:{}};const esc="\\x1B",beep="\\x07";var control=Object.freeze({cursor:{move:{to:(x=1,y=1)=>esc+"["+x+";"+y+"H",up:(n=1)=>esc+"["+n+"A",down:(n=1)=>esc+"["+n+"B",right:(n=1)=>esc+"["+n+"C",left:(n=1)=>esc+"["+n+"D",nextLine:()=>esc+"[E",prevLine:()=>esc+"[F",leftMost:()=>esc+"[G"},hide:()=>esc+"[?25l",show:()=>esc+"[?25h",shape:{block:()=>esc+"]50;CursorShape=0"+beep,bar:()=>esc+"]50;CursorShape=1"+beep,underscore:()=>esc+"50;CursorShape=2"+beep},savePosition:()=>esc+"[s",restorePosition:()=>esc+"[u"},line:{eraseEnd:()=>esc+"[K",eraseStart:()=>esc+"[1K",erase:()=>esc+"[2K"},screen:{eraseDown:()=>esc+"[J",eraseUp:()=>esc+"[1J",erase:()=>esc+"[2J",clear:()=>esc+"c",scrollUp:(n=1)=>esc+"["+n+"S",scrollDown:(n=1)=>esc+"["+n+"T"},misc:{beep:()=>beep,setTitle:str=>esc+"]0;"+str+beep}});var ansi=Object.freeze({reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]});const info=colorize("blue","\\u2139"),success=colorize("green","\\u2714"),warning=colorize("yellow","\\u26A0"),error=colorize("red","\\u2716"),star=colorize("yellowBright","\\u2605"),radioOn=colorize("green","\\u25C9"),radioOff=colorize("red","\\u25EF"),checkboxOn=colorize("green","\\u2612"),checkboxOff=colorize("red","\\u2610");var symbols=Object.freeze({info:info,success:success,warning:warning,error:error,star:star,radioOn:radioOn,radioOff:radioOff,checkboxOn:checkboxOn,checkboxOff:checkboxOff,arrowUp:"\\u2191",arrowDown:"\\u2193",arrowLeft:"\\u2190",arrowRight:"\\u2192",line:"\\u2500",play:"\\u25B6",pointer:"\\u276F",pointerSmall:"\\u203A",square:"\\u2587",squareSmall:"\\u25FC",bullet:"\\u25CF"});var spinners=Object.freeze({line:{fps:8,frames:["-","\\\\","|","/"]},dots:{fps:12.5,frames:["\\u280B","\\u2819","\\u2839","\\u2838","\\u283C","\\u2834","\\u2826","\\u2827","\\u2807","\\u280F"]},scrolling:{fps:5,frames:[".  ",".. ","..."," ..","  .","   "]},scrolling2:{fps:2.5,frames:[".  ",".. ","...","   "]},star:{fps:14,frames:["\\u2736","\\u2738","\\u2739","\\u273A","\\u2739","\\u2737"]},bounceyBall:{fps:8,frames:["\\u2801","\\u2802","\\u2804","\\u2802"]},triangle:{fps:15,frames:["\\u25E2","\\u25E3","\\u25E4","\\u25E5"]},circle:{fps:15,frames:["\\u25D0","\\u25D3","\\u25D1","\\u25D2"]},bounce:{fps:12.5,frames:["( \\u25CF    )","(  \\u25CF   )","(   \\u25CF  )","(    \\u25CF )","(     \\u25CF)","(    \\u25CF )","(   \\u25CF  )","(  \\u25CF   )","( \\u25CF    )","(\\u25CF     )"]},clock:{fps:10,frames:["\\uD83D\\uDD50 ","\\uD83D\\uDD51 ","\\uD83D\\uDD52 ","\\uD83D\\uDD53 ","\\uD83D\\uDD54 ","\\uD83D\\uDD55 ","\\uD83D\\uDD56 ","\\uD83D\\uDD57 ","\\uD83D\\uDD58 ","\\uD83D\\uDD59 ","\\uD83D\\uDD5A "]},pong:{fps:12.5,frames:["\\u2590\\u2802       \\u258C","\\u2590\\u2808       \\u258C","\\u2590 \\u2802      \\u258C","\\u2590 \\u2820      \\u258C","\\u2590  \\u2840     \\u258C","\\u2590  \\u2820     \\u258C","\\u2590   \\u2802    \\u258C","\\u2590   \\u2808    \\u258C","\\u2590    \\u2802   \\u258C","\\u2590    \\u2820   \\u258C","\\u2590     \\u2840  \\u258C","\\u2590     \\u2820  \\u258C","\\u2590      \\u2802 \\u258C","\\u2590      \\u2808 \\u258C","\\u2590       \\u2802\\u258C","\\u2590       \\u2820\\u258C","\\u2590       \\u2840\\u258C","\\u2590      \\u2820 \\u258C","\\u2590      \\u2802 \\u258C","\\u2590     \\u2808  \\u258C","\\u2590     \\u2802  \\u258C","\\u2590    \\u2820   \\u258C","\\u2590    \\u2840   \\u258C","\\u2590   \\u2820    \\u258C","\\u2590   \\u2802    \\u258C","\\u2590  \\u2808     \\u258C","\\u2590  \\u2802     \\u258C","\\u2590 \\u2820      \\u258C","\\u2590 \\u2840      \\u258C","\\u2590\\u2820       \\u258C"]}});Object.assign(self,{sys:sys$1,browser,path,http:function(uri,method="GET"){return new Promise((resolve,reject)=>{!uri instanceof String&&reject("URI invalid");const xhr=new XMLHttpRequest;xhr.open(method,uri,!0),xhr.onload=function(){300>xhr.status&&200<=xhr.status?resolve(xhr.response):reject(xhr.status+" "+xhr.statusText)},xhr.onerror=function(err){reject(err)},xhr.send()})},fs,process:process$1,require:function(requirePath=""){return __awaiter(this,void 0,void 0,function*(){if("string"!=typeof requirePath)throw new Error("argument is not a string");try{return yield loadFile(requirePath)}catch(err){return loadFile(requirePath+"/index")}})},cli:{ArgParser:class{constructor(options){this.options=options||{}}parse(argv=process.argv){}},control,colorize,symbols,Spinner:class{constructor(name){const spinner=spinners[name];this.frames=spinner.frames,this.index=0,this.interval=Math.round(1e3/spinner.fps),this.setIntervalIndex=null}next(){this.index++;const realIndex=(this.index-1)%this.frames.length;return this.frames[realIndex]}start(outputFunction){outputFunction=outputFunction||(str=>process.stdout.write(str)),this.setIntervalIndex=setInterval(()=>{let frame=this.next(),clearFrame=frame.replace(/./g,"\\b");outputFunction(clearFrame),outputFunction(frame)},this.interval)}stop(){clearInterval(this.setIntervalIndex)}}}}),self.print=(...args)=>process$1.stdout.write(args.join(" ")),self.println=(...args)=>process$1.stdout.write(args.join(" ")+"\\n"),addEventListener("message",message=>{const msg=message.data;if("event"===msg.type&&msg.name&&msg.detail){const event=new CustomEvent(msg.name,{detail:msg.detail});dispatchEvent(event)}})})();',image].join('\n\n')),this.worker.addEventListener('message',message=>{this.messageHandler(message)})}messageHandler(message){const msg=message.data;if('syscall'===msg.type&&msg.name in sys)void 0!==msg.id&&msg.args instanceof Array&&sys[msg.name](this,msg.id,msg.args);else if('event'===msg.type&&msg.name&&msg.detail){const event=new CustomEvent(msg.name,{detail:msg.detail});dispatchEvent(event)}else{const error={status:'error',reason:'Invalid request - Rejected by the message handler',id:msg.id};this.worker.postMessage(error)}}exists(path){return!!fs.resolve(path)}open(path,mode='r'){const fd=new FileDescriptor(path,mode);return this.fds.push(fd),this.fds.length-1}close(fd){if(!this.fds[fd])throw new Error('File descriptor does not exist');return this.fds[fd]=null}dup(fd){if(!this.fds[fd])throw new Error('File descriptor does not exist');const copied=this.fds[fd];return this.fds.push(copied),this.fds.length-1}dup2(fd1,fd2){if(!this.fds[fd1])throw new Error('File descriptor does not exist');return this.fds[fd2]=this.fds[fd1],fd2}}var processTable=new class{constructor(init=new Process){if(!init instanceof Process)throw new Error('Init process is invalid');this.list=[init]}add(process){return this.list.push(process)-1}emit(name,detail,pids=Object.keys(this.list)){for(let i in pids){const pid=pids[i];this.list[pid].worker.postMessage({type:'event',name,detail})}}};var console$2=new class{constructor(config={}){this.lineBuffer=[],this.input='',this.config={buffer:!0,echo:!0},Object.assign(this.config,config)}read(){const ret=this.input;return this.input='',ret}write(contents){console.warn('Unhandled console write: '+contents)}send(key){this.config.buffer?this.handle(key):(this.input+=key,processTable.emit('consoleInput')),this.config.echo&&isEchoable(key)&&this.write(key)}handle(key){'\x7F'===key?this.backSpace():'\r'===key?this.enter():'\x1B[A'===key||'\x1B[B'===key||'\x1B[C'===key||'\x1B[D'===key?this.arrow(key):this.lineBuffer.push(key)}backSpace(){this.lineBuffer.pop(),this.write('\b \b')}enter(){this.lineBuffer.push('\n');const line=this.lineBuffer.join('');this.input+=line,processTable.emit('consoleInput'),this.lineBuffer=[],this.write('\r\n')}arrow(){}};const inode=new Inode;inode.read=()=>console$2.read(),inode.write=data=>console$2.write(data.replace(/\n/g,'\r\n'));const devices=new OFS;devices.addInode([],'console',inode);const root=new OFS;root.mkdir(['bin']),root.mkdir(['dev']),root.mkdir(['dev','dom']),root.mkdir(['home']),root.mkdir(['log']),root.mkdir(['tmp']),root.addInode(['bin'],'fsh',new Inode({file:!0,executable:!0,contents:'(function(){"use strict";function tokenizeLine(line=""){const tokens=line.match(/(["\'])(?:\\\\|.)+\\1|((?:[^\\\\\\s]|\\\\.)*)/g).filter(String);for(let token,i=0;i<tokens.length;i++)token=tokens[i],tokens[i]=token.replace(/\\\\(?=.)/g,""),token.match(/^["\'].+(\\1)$/m)&&(tokens[i]=/^(["\'])(.+)(\\1)$/gm.exec(token)[2]);return tokens}function lex(input=""){const allTokens=[],lines=input.match(/(\\\\;|[^;])+/g);for(let tokens,i=0;i<lines.length;i++)tokens=tokenizeLine(lines[i]),allTokens.push(tokens);return allTokens}function parseCommand(tokens){const command={type:"simple",argv:tokens,argc:tokens.length,name:tokens[0]};return command}(function(input=""){const AST={type:"script",commands:[]},commands=lex(input);for(let parsed,i=0;i<commands.length;i++)parsed=parseCommand(commands[i]),AST.commands[i]=parsed;return AST})("echo hello, world")})();'})),root.addInode(['bin'],'jsh',new Inode({file:!0,executable:!0,contents:'var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):new P(function(resolve){resolve(result.value)}).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})};(function(){"use strict";function prompt(str="jsh> ",color="green"){return __awaiter(this,void 0,void 0,function*(){const prompt=cli.colorize(color,str);return print(prompt)})}function evaluate(str){return __awaiter(this,void 0,void 0,function*(){try{const result=self.eval(str),formatted=cli.colorize("green",result);return yield println(formatted),prompt()}catch(err){const formatted=cli.colorize("red",err);return yield println(formatted),prompt()}})}addEventListener("consoleInput",function(){return __awaiter(this,void 0,void 0,function*(){const input=yield process.stdin.read();evaluate(input)})}),function(){return __awaiter(this,void 0,void 0,function*(){return yield println("Welcome to Faux\'s Javascript SHell"),prompt()})}()})();'}));const fs=new class{constructor(rootDrive=new OFS){this.mounts={"/":rootDrive}}mount(fs,mountPoint){const normalized=normalize(mountPoint),inode=this.resolve(normalized);if(inode&&inode.dir)return this.mounts[normalized]=fs,normalized;throw new Error('No directory to mount to')}unmount(mountPoint){const normalized=normalize(mountPoint);this.mounts[normalized]=null}getMountPoint(path){const segments=(()=>{const pathArray=chop(path),segments=[];for(let matchPath,i=0;i<=pathArray.length;i++)matchPath=pathArray.slice(0,i),segments.push('/'+matchPath.join('/'));return segments})(),resolves=[];return Object.keys(this.mounts).forEach(mount=>{for(let i in segments)segments[i]===mount&&resolves.push(mount)}),resolves.pop()}getPathInfo(path){const normalized=normalize(path),mountPoint=this.getMountPoint(normalized),localFsPath=normalized.substring(mountPoint.length)||'/';return{localFs:this.mounts[mountPoint],localFsPathArray:chop(localFsPath)}}resolve(path){const{localFs,localFsPathArray}=this.getPathInfo(path);return localFs.resolve(localFsPathArray)}create(path){const{localFs,localFsPathArray}=this.getPathInfo(path);return localFs.create(localFsPathArray)}mkdir(path){const{localFs,localFsPathArray}=this.getPathInfo(path);return localFs.mkdir(localFsPathArray)}link(){}unlink(path){const{localFs,localFsPathArray}=this.getPathInfo(path);localFs.unlink(localFsPathArray)}}(root);fs.mount(new class{constructor(){this.mkdir=this.create}resolve(pathArray){let element;if(0===pathArray.length)element=document.querySelector('*');else{let selector=' '+pathArray.join(' > ');selector=selector.replace(/ (\d)/g,' :nth-child($1)'),element=document.querySelector(selector)}if(!element)throw new Error('Failed to resolve');return new Inode$1({raw:element})}create(pathArray){const parent=this.resolve(pathArray.slice(0,-1)),name=pathArray.slice(-1)[0],element=document.createElement(name);return parent.raw.appendChild(element),new Inode$1({raw:element})}link(){}unlink(){}},'/dev/dom'),fs.mount(devices,'/dev');var browser=function(){const ua=navigator.userAgent,matches=ua.match(/(vivaldi|opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*([\d.]+)/i)||[];if(/trident/i.test(matches[1])){const tem=ua.match(/\brv[ :]+([\d.]+)/g)||'';return['IE',tem[1]]}if('Chrome'===matches[1]){const tem=ua.match(/\b(OPR|Edge)\/([\d.]+)/);if(tem)return['Opera',tem[1]]}return matches[2]?{name:matches[1],version:matches[2]}:{name:navigator.appName,version:navigator.appVersion}}();return{fs,sys,proc:processTable,utils,console:console$2,browser,version:'0.0.3'}});