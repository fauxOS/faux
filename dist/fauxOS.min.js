(function(global,factory){'object'==typeof exports&&'undefined'!=typeof module?module.exports=factory():'function'==typeof define&&define.amd?define('faux',factory):global.faux=factory()})(this,function(){'use strict';function assertString(str){if('string'!=typeof str)throw new Error('Some argument is not a string')}function normalize(path){if(!path)return'.';assertString(path);const significant=[];let isAbsolute=!1;0===path.indexOf('/')&&(isAbsolute=!0);const pathArray=path.match(/[^/]+/g);for(let i in pathArray){const name=pathArray[i],lastItem=significant[significant.length-1];'.'===name||('..'===name?isAbsolute?significant.pop():0===significant.length||'..'===lastItem?significant.push('..'):significant.pop():significant.push(name))}return isAbsolute?'/'+significant.join('/'):significant.join('/')}function parse(path=''){assertString(path);const normalized=normalize(path),matches=normalized.match(splitPathRe);return{root:matches[1],dir:matches[2],base:matches[3],ext:matches[4],name:matches[3].slice(0,matches[3].length-matches[4].length)}}function dirname(path=''){const parsed=parse(path);return parsed.root?'/'+parsed.dir:parsed.dir}function basename(path='',extension=''){const basename=parse(path).base,indexOf=basename.indexOf(extension);return indexOf&&indexOf+extension.length===basename.length?basename.slice(0,indexOf):basename}function chop(path){const segments=normalize(path).match(/[^/]+/g);return segments?segments:['/']}function getMode(modeStr='r'){return{r:[!0,!1,!1,!1,!1],"r+":[!0,!0,!1,!1,!1],w:[!1,!0,!0,!0,!1],"w+":[!0,!0,!0,!0,!1],a:[!1,!0,!1,!0,!0],"a+":[!0,!0,!1,!0,!0]}[modeStr]}function fail(process,msgID,args){const error={status:'error',reason:args[0],id:msgID};process.worker.postMessage(error)}function pass(process,msgID,args){const result={status:'success',result:args[0],id:msgID};process.worker.postMessage(result)}function mkWorker(scriptStr){const blob=new Blob([scriptStr],{type:'application/javascript'}),uri=URL.createObjectURL(blob);return new Worker(uri)}const splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;class OFS_Inode{constructor(config={}){this.links=0,this.exec=!1,Object.assign(this,config)}}class OFS{constructor(){this.drive=arguments[0]||[new OFS_Inode({links:1,id:0,type:'d',files:{}})]}resolveHard(path){let inode=0;const trace=[inode];if('/'===path||''===path)return this.drive[inode];const pathArray=chop(path);for(let i=0;i<pathArray.length;i++){const name=pathArray[i],inodeObj=this.drive[inode];if(void 0===inodeObj.files)return-1;if(inode=inodeObj.files[name],void 0===inode)return-1;trace.push(inode)}return this.drive[trace.pop()]}resolve(path,redirectCount=0){if(50<=redirectCount)return-1;const inode=this.resolveHard(path);return 0>inode?-1:'sl'===inode.type?(redirectCount++,this.resolve(inode.redirect,redirectCount)):inode}addInode(type,name=null,parentInode=null){if(name.match('/'))return-1;const id=this.drive.length;return this.drive[id]=new OFS_Inode({links:1,type:type,id:id}),parentInode instanceof OFS_Inode&&'d'===parentInode.type&&(parentInode.files[name]=id),this.drive[id]}touch(path){const parentInode=this.resolve(dirname(path)),name=basename(path),inode=this.addInode('f',name,parentInode);return 0>inode?-1:(inode.data='',inode)}mkDir(path){const parentInode=this.resolve(dirname(path)),name=basename(path),inode=this.addInode('d',name,parentInode);return 0>inode?-1:(inode.files={},inode)}mkLink(inode,path){const parentInode=this.resolve(dirname(path)),name=basename(path);return name.match('/')?-1:(parentInode.files[name]=inode.id,inode)}mkSymLink(refPath){const parentInode=this.resolve(dirname(path)),name=basename(path),inode=this.addInode('sl',name,parentInode);return 0>inode?-1:(inode.redirect=normalize(refPath),inode)}rm(path){const parentInode=this.resolve(dirname(path)),name=basename(path);return 0>parentInode?-1:delete parentInode.files[name]}}class VNode{constructor(container){this.container=container,this.type=this.findType(),this.exec=this.isExecutable()}findType(){return this.container instanceof OFS_Inode?'inode':this.container instanceof HTMLElement?'element':'unknown'}isExecutable(){return!('inode'!==this.type)&&this.container.exec}get data(){if('inode'===this.type){const data=this.container.data;return void 0===data?-2:data}return'element'===this.type?this.container.innerHTML:-1}set data(data){return'inode'===this.type?(this.container.data=data,data):'element'===this.type?(this.container.innerHTML=data,data):-1}get files(){if('inode'===this.type)return'd'===this.container.type?Object.keys(this.container.files):null;if('element'===this.type){if(this.container.hasChildNodes()){const children=this.container.children,elements=[];for(let i=0;i<children.length;i++){let el=children[i].localName,id=children[i].id,classes=children[i].className.split(' ').join('.');elements.push(el+id+classes),elements.push(i+1)}return elements}return null}return-1}}const fs=new class{constructor(rootDrive=new OFS){this.mounts={"/":rootDrive}}mount(fs,mountPoint){const normalized=normalize(mountPoint);return this.mounts[normalized]=fs,normalized}unmount(mountPoint){const normalized=normalize(mountPoint);return delete this.mounts[normalized]}mountPoint(path){const pathArray=chop(path);if(1===pathArray.length&&'/'===pathArray[0])return pathArray;const segments=[];for(let matchPath,i=0;i<=pathArray.length;i++)matchPath=pathArray.slice(0,i),segments.push('/'+matchPath.join('/'));const resolves=[];return Object.keys(this.mounts).forEach(mount=>{for(let i in segments)segments[i]===mount&&resolves.push(mount)}),resolves.pop()}resolve(path){const normalized=normalize(path),mountPoint=this.mountPoint(normalized),fs=this.mounts[mountPoint],fsLocalPath=normalized.substring(mountPoint.length),container=fs.resolve(fsLocalPath);return 0>container?-1:new VNode(container)}touch(path){const normalized=normalize(path),mountPoint=this.mountPoint(path),fs=this.mounts[mountPoint],fsLocalPath=normalized.substring(mountPoint.length),touched=fs.touch(fsLocalPath);return 0>touched?-1:touched}}(new OFS([new OFS_Inode({links:1,id:0,type:'d',files:{bin:1,dev:2,etc:3,home:4,log:5,tmp:6}}),new OFS_Inode({links:1,type:'d',id:1,files:{fsh:7}}),new OFS_Inode({links:1,type:'d',id:2,files:{}}),new OFS_Inode({links:1,type:'d',id:3,files:{}}),new OFS_Inode({links:1,type:'d',id:4,files:{}}),new OFS_Inode({links:1,type:'d',id:5,files:{}}),new OFS_Inode({links:1,type:'d',id:6,files:{}}),new OFS_Inode({links:1,type:'f',exec:!0,id:7,data:'function tokenizeLine(line=""){const tokens=line.match(/(["\'])(?:\\\\|.)+\\1|((?:[^\\\\\\s]|\\\\.)*)/g).filter(String);for(let token,i=0;i<tokens.length;i++)token=tokens[i],tokens[i]=token.replace(/\\\\(?=.)/g,""),token.match(/^["\'].+(\\1)$/m)&&(tokens[i]=/^(["\'])(.+)(\\1)$/gm.exec(token)[2]);return tokens}function lex(input=""){const allTokens=[],lines=input.match(/(\\\\;|[^;])+/g);for(let tokens,i=0;i<lines.length;i++)tokens=tokenizeLine(lines[i]),allTokens.push(tokens);return allTokens}function parseCommand(tokens){const command={type:"simple",argv:tokens,argc:tokens.length,name:tokens[0]};return command}function parse(input=""){const AST={type:"script",commands:[]},commands=lex(input);for(let parsed,i=0;i<commands.length;i++)parsed=parseCommand(commands[i]),AST.commands[i]=parsed;return AST}parse("echo hello, world");'})]));fs.mount(new class{constructor(selectorBase=''){this.base=selectorBase}resolve(path){const chopped=chop(path);if('/'===chopped[0])return document.querySelector('*');let selector=' '+chopped.join(' > ');return selector=selector.replace(/ (\d)/g,' :nth-child($1)'),document.querySelector(selector)}touch(path){const parent=this.resolve(dirname(path));if(!parent)return-1;const el=document.createElement(basename(path));return parent.appendChild(el)}},'/dev/dom');class FileDescriptor{constructor(path,mode){if(this.mode=getMode(mode),this.path=normalize(path),this.vnode=fs.resolve(this.path),!this.vnode.container)if(!this.mode[3])throw new Error('Path Unresolved');else if(fs.touch(this.path),this.vnode=fs.resolve(this.path),0>this.vnode)throw new Error('Error on file creation or resolve');this.mode[2]&&this.truncate(),this.type=this.vnode.type}truncate(){this.vnode.data=''}read(){return this.mode[0]?this.vnode.data:-1}write(data){return this.vnode.data=data}readdir(){return this.vnode.files}}var sys=Object.freeze({spawn:function(process,msgID,args){if(!args[1]instanceof Array)return fail(process,msgID,['Second argument should be the array argv']),-1;const newProcess=new Process(args[0],args[1]),pid=proc.add(newProcess);pass(process,msgID,[pid])},access:function(process,msgID,args){if('string'!=typeof args[0])return fail(process,msgID,['Argument should be a string']),-1;let path='';path='/'===args[0][0]?args[0]:process.cwd+'/'+args[0];const result=process.access(path);pass(process,msgID,[result])},open:function(process,msgID,args){if('string'!=typeof args[0]&&'string'!=typeof args[1])return fail(process,msgID,['Arguments 1 and 2 should be a strings']),-1;let path='';path='/'===args[0][0]?args[0]:process.cwd+'/'+args[0];const result=process.open(path,args[1]);pass(process,msgID,[result])},read:function(process,msgID,args){if(1!==args.length)return fail(process,msgID,['Should have only 1 argument']),-1;if(0>args[0])return fail(process,msgID,['File Descriptor should be postive, check file name']),-1;const result=process.fds[args[0]].read();pass(process,msgID,[result])},write:function(process,msgID,args){if(2!==args.length)return fail(process,msgID,['Should have 2 arguments']),-1;if(0>args[0])return fail(process,msgID,['File Descriptor should be postive, check file name']),-1;const result=process.fds[args[0]].write(args[1]);pass(process,msgID,[result])},pwd:function(process,msgID){pass(process,msgID,[process.cwd])},chdir:function(process,msgID,args){return!args[0]instanceof String?(fail(process,msgID,['Argument should be a string']),-1):void(process.cwd=args[0],pass(process,msgID,[process.cwd]))},getenv:function(process,msgID,args=['']){if(!args[0]instanceof String)return fail(process,msgID,['Variable name should be a string']),-1;(args=[''])&&pass(process,msgID,[process.env]);const value=process.env[args[0]];pass(process,msgID,[value])},setenv:function(process,msgID,args){if(!args[0]instanceof String)return fail(process,msgID,['Variable name should be a string']),-1;if(!args[1]instanceof String)return fail(process,msgID,['Variable value should be a string']),-1;const value=process.env[args[0]]=args[1];pass(process,msgID,[value])}}),utils=Object.freeze({genUUID:function(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(char){let r=0|16*Math.random(),v='x'===char?r:8|3&r;return v.toString(16)})},mkWorker:mkWorker,openLocalFile:function(readAs='readAsText'){const input=document.createElement('input');return input.type='file',input.click(),new Promise(function(resolve){input.onchange=function(){const file=input.files[0],reader=new FileReader;reader[readAs](file),reader.onloadend=function(){resolve(reader.result)}}})},http:function(uri,method='GET'){return new Promise((resolve,reject)=>{!uri instanceof String&&reject('URI invalid');const xhr=new XMLHttpRequest;xhr.open(method,uri,!0),xhr.onload=function(){300>xhr.status&&200<=xhr.status?resolve(xhr.response):reject(xhr.status+' '+xhr.statusText)},xhr.onerror=function(err){reject(err)},xhr.send()})}});class Process{constructor(image){this.argv=[],this.argc=this.argv.length,this.fds=[],this.libs=[],this.cwd='/',this.env={SHELL:'fsh',PATH:'/sbin:/bin',HOME:'/home',TERM:'xterm-256color'},this.image=image;const expose='process.argv = '+JSON.stringify(this.argv)+';process.argc = '+this.argc+';process.env = '+JSON.stringify(this.env)+';';this.worker=mkWorker(['function newID(length=10){const chars="0123456789abcdefghiklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXTZ".split("");let id="";for(let i=0;i<length;i++){const randomIndex=Math.floor(Math.random()*chars.length);id+=chars[randomIndex]}return id}function call(name,args){const id=newID();return postMessage({type:"syscall",name,args,id}),new Promise((resolve,reject)=>{function listener(message){const msg=message.data;msg.id===id&&("success"===msg.status?resolve(msg.result):reject(msg.reason),removeEventListener("message",listener))}addEventListener("message",listener)})}async function spawn(image,argv=[]){return call("spawn",[image,argv])}async function exec(path,argv){return call("exec",[path,argv])}async function access(path){return call("access",[path])}async function open(path,mode="r"){const fd=await call("open",[path,mode]);return 0>fd?new Error("Could not open file"):fd}async function read(fd){const data=await call("read",[fd]);if(-2===data)return new Error("No data returned, possibly a directory");return 0>data?new Error("Could not get data"):data}async function write(fd,data){const ret=await call("write",[fd,data]);return 0>ret?new Error("Could not write data"):data}async function pwd(){return call("pwd",[])}async function chdir(path){return call("chdir",[path])}async function getenv(varName){return call("getenv",[varName])}async function setenv(varName){return call("setenv",[varName])}var sys$1=Object.freeze({spawn:spawn,exec:exec,access:access,open:open,read:read,write:write,pwd:pwd,chdir:chdir,getenv:getenv,setenv:setenv});function browserInfo(){const ua=navigator.userAgent,matches=ua.match(/(vivaldi|opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*([\\d.]+)/i)||[];if(/trident/i.test(matches[1])){const tem=ua.match(/\\brv[ :]+([\\d.]+)/g)||"";return["IE",tem[1]]}if("Chrome"===matches[1]){const tem=ua.match(/\\b(OPR|Edge)\\/([\\d.]+)/);if(tem)return["Opera",tem[1]]}return matches[2]?{name:matches[1],version:matches[2]}:{name:navigator.appName,version:navigator.appVersion}}var browser=browserInfo();function assertString(str){if("string"!=typeof str)throw new Error("Some argument is not a string")}function normalize(path){if(!path)return".";assertString(path);const significant=[];let isAbsolute=!1;0===path.indexOf("/")&&(isAbsolute=!0);const pathArray=path.match(/[^/]+/g);for(let i in pathArray){const name=pathArray[i],lastItem=significant[significant.length-1];"."===name||(".."===name?isAbsolute?significant.pop():0===significant.length||".."===lastItem?significant.push(".."):significant.pop():significant.push(name))}return isAbsolute?"/"+significant.join("/"):significant.join("/")}const splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;function parse(path=""){assertString(path);const normalized=normalize(path),matches=normalized.match(splitPathRe);return{root:matches[1],dir:matches[2],base:matches[3],ext:matches[4],name:matches[3].slice(0,matches[3].length-matches[4].length)}}function dirname(path=""){const parsed=parse(path);return parsed.root?"/"+parsed.dir:parsed.dir}function basename(path="",extension=""){const basename=parse(path).base,indexOf=basename.indexOf(extension);return indexOf&&indexOf+extension.length===basename.length?basename.slice(0,indexOf):basename}function extname(path){return parse(path).ext}function join(){const paths=[];for(let i in arguments)assertString(arguments[i]),paths.push(arguments[i]);const joined=paths.join("/");return normalize(joined)}function chop(path){const segments=normalize(path).match(/[^/]+/g);return segments?segments:["/"]}var path=Object.freeze({normalize:normalize,parse:parse,dirname:dirname,basename:basename,extname:extname,join:join,chop:chop});function http(uri,method="GET"){return new Promise((resolve,reject)=>{!uri instanceof String&&reject("URI invalid");const xhr=new XMLHttpRequest;xhr.open(method,uri,!0),xhr.onload=function(){300>xhr.status&&200<=xhr.status?resolve(xhr.response):reject(xhr.status+" "+xhr.statusText)},xhr.onerror=function(err){reject(err)},xhr.send()})}async function readFile(path="/"){const fd=await sys.open(path,"r");return sys.read(fd)}async function writeFile(path="/",data=""){const fd=await sys.open(path,"w");return sys.write(fd,data)}var fs$1=Object.freeze({readFile:readFile,writeFile:writeFile});const stdin={},stdout={write(str){console.log(str)}},stderr={};var process$1=Object.freeze({stdin:stdin,stdout:stdout,stderr:stderr});async function loadFile(path){if(await sys.access(path))return self.eval((await fs.readFile(path)));if(await sys.access(path+".js"))return self.eval((await fs.readFile(path+".js")));if(await sys.access(path+".json"))return JSON.parse((await fs.readFile(path+".json")));throw new Error("not found")}async function load(requirePath=""){if("string"!=typeof requirePath)throw new Error("argument is not a string");try{return loadFile(requirePath)}catch(err){return loadFile(requirePath+"/index")}}class ArgParser{constructor(options){this.options=options||{}}parse(argv=process.argv){}}const esc="\\x1B[";var control={cursor:{move:{to:(x=1,y=1)=>esc+x+";"+y+"H",up:(n=1)=>esc+n+"A",down:(n=1)=>esc+n+"B",right:(n=1)=>esc+n+"C",left:(n=1)=>esc+n+"D",nextLine:()=>esc+"E",prevLine:()=>esc+"F",leftMost:()=>esc+"G"},hide:()=>esc+"?25l",show:()=>esc+"?25h",shape:{block:()=>"\\x1B]50;CursorShape=0\\x07",bar:()=>"\\x1B]50;CursorShape=1\\x07",underscore:()=>"\\x1B]50;CursorShape=2\\x07"},savePosition:()=>esc+"s",restorePosition:()=>esc+"u"},line:{eraseEnd:()=>esc+"K",eraseStart:()=>esc+"1K",erase:()=>esc+"2K"},screen:{eraseDown:()=>esc+"J",eraseUp:()=>esc+"1J",erase:()=>esc+"2J",clear:()=>"\\x1Bc",scrollUp:(n=1)=>esc+n+"S",scrollDown:(n=1)=>esc+n+"T"},beep:()=>"\\x07",setTitle:str=>"\\x1B]0;"+str+"\\x07"};const ansi={reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]};function wrap(style,str){return"\\x1B["+ansi[style][0]+"m"+str+"\\x1B["+ansi[style][1]+"m"}function dye(styles,str){if(styles instanceof Array)for(let i in styles)str=wrap(styles[i],str);else"string"==typeof styles&&(str=wrap(styles,str));return str}var symbols={info:dye("blue","\\u2139"),success:dye("green","\\u2714"),warning:dye("yellow","\\u26A0"),error:dye("red","\\u2716"),star:dye("yellowBright","\\u2605"),radioOn:dye("green","\\u25C9"),radioOff:dye("red","\\u25EF"),checkboxOn:dye("green","\\u2612"),checkboxOff:dye("red","\\u2610"),arrowUp:"\\u2191",arrowDown:"\\u2193",arrowLeft:"\\u2190",arrowRight:"\\u2192",line:"\\u2500",play:"\\u25B6",pointer:"\\u276F",pointerSmall:"\\u203A",square:"\\u2587",squareSmall:"\\u25FC",bullet:"\\u25CF"};class Spinner{constructor(name){const spinner={line:{fps:8,frames:["-","\\\\","|","/"]},dots:{fps:12.5,frames:["\\u280B","\\u2819","\\u2839","\\u2838","\\u283C","\\u2834","\\u2826","\\u2827","\\u2807","\\u280F"]},scrolling:{fps:5,frames:[".  ",".. ","..."," ..","  .","   "]},scrolling2:{fps:2.5,frames:[".  ",".. ","...","   "]},star:{fps:14,frames:["\\u2736","\\u2738","\\u2739","\\u273A","\\u2739","\\u2737"]},bounceyBall:{fps:8,frames:["\\u2801","\\u2802","\\u2804","\\u2802"]},triangle:{fps:15,frames:["\\u25E2","\\u25E3","\\u25E4","\\u25E5"]},circle:{fps:15,frames:["\\u25D0","\\u25D3","\\u25D1","\\u25D2"]},bounce:{fps:12.5,frames:["( \\u25CF    )","(  \\u25CF   )","(   \\u25CF  )","(    \\u25CF )","(     \\u25CF)","(    \\u25CF )","(   \\u25CF  )","(  \\u25CF   )","( \\u25CF    )","(\\u25CF     )"]},clock:{fps:10,frames:["\\uD83D\\uDD50 ","\\uD83D\\uDD51 ","\\uD83D\\uDD52 ","\\uD83D\\uDD53 ","\\uD83D\\uDD54 ","\\uD83D\\uDD55 ","\\uD83D\\uDD56 ","\\uD83D\\uDD57 ","\\uD83D\\uDD58 ","\\uD83D\\uDD59 ","\\uD83D\\uDD5A "]},pong:{fps:12.5,frames:["\\u2590\\u2802       \\u258C","\\u2590\\u2808       \\u258C","\\u2590 \\u2802      \\u258C","\\u2590 \\u2820      \\u258C","\\u2590  \\u2840     \\u258C","\\u2590  \\u2820     \\u258C","\\u2590   \\u2802    \\u258C","\\u2590   \\u2808    \\u258C","\\u2590    \\u2802   \\u258C","\\u2590    \\u2820   \\u258C","\\u2590     \\u2840  \\u258C","\\u2590     \\u2820  \\u258C","\\u2590      \\u2802 \\u258C","\\u2590      \\u2808 \\u258C","\\u2590       \\u2802\\u258C","\\u2590       \\u2820\\u258C","\\u2590       \\u2840\\u258C","\\u2590      \\u2820 \\u258C","\\u2590      \\u2802 \\u258C","\\u2590     \\u2808  \\u258C","\\u2590     \\u2802  \\u258C","\\u2590    \\u2820   \\u258C","\\u2590    \\u2840   \\u258C","\\u2590   \\u2820    \\u258C","\\u2590   \\u2802    \\u258C","\\u2590  \\u2808     \\u258C","\\u2590  \\u2802     \\u258C","\\u2590 \\u2820      \\u258C","\\u2590 \\u2840      \\u258C","\\u2590\\u2820       \\u258C"]}}[name];this.frames=spinner.frames,this.index=0,this.interval=Math.round(1e3/spinner.fps),this.setIntervalIndex=null}next(){this.index++;const realIndex=(this.index-1)%this.frames.length;return this.frames[realIndex]}start(outputFunction){outputFunction=outputFunction||(str=>process.stdout.write(str)),this.setIntervalIndex=setInterval(()=>{let frame=this.next(),clearFrame=frame.replace(/./g,"\\b");outputFunction(clearFrame),outputFunction(frame)},this.interval)}stop(){clearInterval(this.setIntervalIndex)}}var cli={ArgParser,control,dye,symbols,Spinner};Object.assign(self,{sys:sys$1,browser,path,http,fs:fs$1,process:process$1,require:load,cli}),addEventListener("message",message=>{const msg=message.data;if("event"===msg.type&&msg.name&&msg.detail){const event=new CustomEvent(msg.name,{detail:msg.detail});dispatchEvent(event)}});',expose,image].join('\n\n')),this.worker.addEventListener('message',message=>{this.messageHandler(message)})}messageHandler(message){const msg=message.data;if('syscall'===msg.type&&msg.name in sys)void 0!==msg.id&&msg.args instanceof Array&&sys[msg.name](this,msg.id,msg.args);else if('event'===msg.type&&msg.name&&msg.detail){const event=new CustomEvent(msg.name,{detail:msg.detail});dispatchEvent(event)}else{const error={status:'error',reason:'Invalid request - Rejected by the message handler',id:msg.id};this.worker.postMessage(error)}}access(path,mode='r'){try{const fd=new FileDescriptor(path,mode);return!!fd.vnode}catch(err){return!1}}open(path,mode){if(!this.access(path,mode))return-1;const fd=new FileDescriptor(path,mode);return this.fds.push(fd),this.fds.length-1}}var proc=new class{constructor(init){if(init===void 0)throw new Error('Init process must be defined');this.list=[null,init],this.nextPID=2}add(process){return this.nextPID=this.list.push(process),this.nextPID-1}emit(name,detail,pids=[]){if(0===pids.length)for(let i=1;i<this.list.length;i++)this.list[i].worker.postMessage({type:'event',name,detail});else for(let i in pids)this.list[pids[i]].worker.postMessage({type:'event',name,detail})}}(new Process()),browser=function(){const ua=navigator.userAgent,matches=ua.match(/(vivaldi|opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*([\d.]+)/i)||[];if(/trident/i.test(matches[1])){const tem=ua.match(/\brv[ :]+([\d.]+)/g)||'';return['IE',tem[1]]}if('Chrome'===matches[1]){const tem=ua.match(/\b(OPR|Edge)\/([\d.]+)/);if(tem)return['Opera',tem[1]]}return matches[2]?{name:matches[1],version:matches[2]}:{name:navigator.appName,version:navigator.appVersion}}();return{fs,sys,proc,utils,browser,name:'faux',version:'0.0.3'}});