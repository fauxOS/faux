"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function genUUID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})}var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();"undefined"==typeof window&&(global.window=global);var Pathname=function(){function Pathname(input){_classCallCheck(this,Pathname),this.input=input}return _createClass(Pathname,[{key:"clean",value:function clean(){var clean=[],pathArray=this.input.match(/[^\/]+/g);for(var i in pathArray){var name=pathArray[i];"."===name||(".."===name?clean.pop():clean.push(name))}return"/"+clean.join("/")}},{key:"chop",value:function(){var segments=this.clean().match(/[^\/]+/g);return null===segments?["/"]:segments}},{key:"name",value:function(){return this.chop().pop()}},{key:"basename",value:function(){var name=this.name();if(""===name)return name;var base=name.match(/^[^\.]+/);return null!==base?base[0]:""}},{key:"parent",value:function(){if("/"===this.name())return null;var parentLen=this.clean().length-this.name().length;return this.clean().slice(0,parentLen)}},{key:"extentions",value:function(){return this.name().match(/\.[^\.]+/g)}}]),Pathname}(),Inode=function Inode(){var config=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,Inode),this.links=0,Object.assign(this,config)},Disk=function(){function Disk(){_classCallCheck(this,Disk),this.uuid=genUUID(),this.inodes=[new Inode({links:1,type:"d",files:{".":0,"..":0}})]}return _createClass(Disk,[{key:"addInode",value:function(type){var name=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,parentInode=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(name.match("/"))return console.warn("No '/' allowed in a name"),-1;var id=this.inodes.length;return this.inodes[id]=new Inode({links:1,type:type,id:id}),parentInode instanceof Inode&&"d"===parentInode.type&&(parentInode.files[name]=id),this.inodes[id]}},{key:"mkFile",value:function(name,parentInode){var inode=this.addInode("f",name,parentInode);return inode<0?-1:(inode.data="",inode)}},{key:"mkDir",value:function(name,parentInode){var inode=this.addInode("d",name,parentInode);return inode<0?-1:(inode.files={".":inode.id,"..":parentInode.id},inode)}},{key:"mkLink",value:function(name,parentInode,targetInode){return name.match("/")?(console.warn("No '/' allowed in a name"),-1):(parentInode.files[name]=targetInode.id,targetInode)}},{key:"mkSymLink",value:function(name,parentInode,targetPath){var inode=this.addInode("sl",name,parentInode);if(inode<0)return-1;var path=new Pathname(targetPath).clean();return inode.redirect=path,inode}}]),Disk}(),VFS=function(){function VFS(rootDisk){_classCallCheck(this,VFS),this.mounts={"/":rootDisk}}return _createClass(VFS,[{key:"mount",value:function(disk,mountPoint){return this.mounts[mountPoint]=disk}},{key:"unmount",value:function(mountPoint){return delete this.mounts[mountPoint]}},{key:"unmountByUUID",value:function(uuid){var mountPoints=Object.keys(box.fs.mounts);for(var i in mountPoints){var mountPoint=mountPoints[i];if(this.mounts[mountPoint].uuid===uuid)return delete this.mounts[mountPoint]}}},{key:"getDisk",value:function(path){for(var segments=[],resolves=[],pathArray=new Pathname(path).chop(),i=0;i<=pathArray.length;i++){var matchPath=pathArray.slice(0,i);segments.push("/"+matchPath.join("/"))}var mounts=Object.keys(this.mounts);for(var _i in mounts){var mount=new Pathname(mounts[_i]).clean();for(var _i2 in segments)segments[_i2]===mount&&resolves.push(mount)}var mountPoint=resolves.pop(),disk=this.mounts[mountPoint],mountPointSegLen=new Pathname(mountPoint).chop().length,returnPathArray=[];return returnPathArray=mountPointSegLen<=1?pathArray.slice(mountPointSegLen):pathArray.slice(mountPointSegLen-1),{disk:disk,pathArray:returnPathArray}}},{key:"resolveHard",value:function(path){var inode=0,trace=[inode],resolveInfo=this.getDisk(path),disk=resolveInfo.disk,pathArray=resolveInfo.pathArray;for(var i in pathArray){var name=pathArray[i],inodeObj=disk.inodes[inode];if(void 0===inodeObj.files)return console.warn("Could not resolve path to inodes completely, stopping at inode : "+inode),console.warn(trace),-1;if(inode=inodeObj.files[name],void 0===inode)return console.warn("Could not find end inode, failed at segment name : "+name),console.warn(trace),-1;trace.push(inode)}return disk.inodes[trace.pop()]}},{key:"resolve",value:function(path){var redirectCount=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(redirectCount>=50)return console.warn("Max symbolic link redirect count reached (50) at "+path),-1;var inode=this.resolveHard(path);return"sl"===inode.type?(redirectCount++,this.resolve(inode.redirect,redirectCount)):inode}},{key:"rm",value:function(path){var pathname=new Pathname(path),parent=pathname.parent(),name=pathname.name(),disk=this.getDisk(parent).disk,parentInode=this.resolve(parent);return parentInode<0?(console.warn("Parent directory, "+parent+" not resolved"),-1):delete disk.inodes[parentInode].files[name]}},{key:"mkPath",value:function(type,path){var target=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,pathname=new Pathname(path),parent=pathname.parent(),name=pathname.name(),disk=this.getDisk(parent).disk,parentInode=this.resolve(parent);if(parentInode<0)return console.warn("Parent directory, "+parent+" not resolved"),-1;var add=-1;if("f"===type)add=disk.mkFile(name,parentInode);else if("d"===type)add=disk.mkDir(name,parentInode);else if("l"===type&&null!==target){var targetInode=this.resolve(target);if(targetInode<0)return console.warn("Target inode to hard link not resolved"),-1;add=disk.mkLink(name,parentInode,targetInode)}else{if("sl"!==type||null===target)return console.warn("Unknown type : "+type),-1;add=disk.mkSymLink(name,parentInode,target)}return add<0?(console.warn("Inode addition error"),-1):pathname.clean()}},{key:"touch",value:function(path){return this.mkPath("f",path)}},{key:"mkdir",value:function(path){return this.mkPath("d",path)}},{key:"ln",value:function(path,targetPath){return this.mkPath("l",path,targetPath)}},{key:"lns",value:function(path,targetPath){return this.mkPath("sl",path,targetPath)}}]),VFS}(),Computer=function Computer(name){_classCallCheck(this,Computer),this.name=name,this.fs=new VFS(new Disk)};window.box=new Computer("fauxOS");